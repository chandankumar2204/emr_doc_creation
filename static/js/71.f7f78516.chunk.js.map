{"version":3,"file":"static/js/71.f7f78516.chunk.js","mappings":"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","sources":["components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","components/Popup/Popup.jsx","pages/DocumentCreation/WidgetLifecycle.jsx","hooks/useDocumentCreationWidget.js","hooks/useDocumentCreationDropableArea.js","pages/DocumentCreation/DragAndDrop.jsx","pages/DocumentCreation/DocumentCreationHelpers.js","pages/DocumentCreation/validateFile.js","components/Modals/DocumentCreationModal.jsx","pages/DocumentCreation/DocumentCreationWidgetToolbarCta.jsx","pages/DocumentCreation/DocumentCreationWidget.jsx","pages/DocumentCreation/documentCreationIndex.js","services/api/PlantAssignment/saveTableDataService.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst FileUpload = forwardRef(\r\n  (\r\n    {\r\n      fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n      multiple = true,\r\n      onUpload,\r\n      onReset,\r\n      disabled = false,\r\n      message = \"Drag & Drop your files here or Click to browse\",\r\n    },\r\n    ref\r\n  ) => {\r\n    const [files, setFiles] = useState([]);\r\n    const { showErrorToast } = useToast();\r\n\r\n    // Expose handleClearFiles to parent through ref\r\n    useImperativeHandle(ref, () => ({\r\n      handleClearFiles: (skipSuccessToast = false) => {\r\n        setFiles([]);\r\n        if (onUpload) {\r\n          onUpload([]);\r\n        }\r\n        if (onReset) {\r\n          onReset(skipSuccessToast); // Pass skipSuccessToast parameter\r\n        }\r\n      },\r\n    }));\r\n\r\n    const handleChange = (selectedFiles) => {\r\n      const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n      setFiles(fileArray);\r\n\r\n      // Callback function to send files to parent component\r\n      if (onUpload) {\r\n        onUpload(fileArray);\r\n      }\r\n    };\r\n\r\n    const handleClearFile = () => {\r\n      ref.current.handleClearFiles(false); // Pass false to show success toast\r\n    };\r\n    // const handleDragOver = (event) => {\r\n    //   if (disabled) {\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     showErrorToast(\"Please choose an operation from the drop-down first\");\r\n    //   } else {\r\n    //     // Allow drag-over behavior for valid file uploads\r\n    //     event.preventDefault();\r\n    //     event.dataTransfer.dropEffect = \"copy\";\r\n    //   }\r\n    // };\r\n\r\n    return (\r\n      <div\r\n        className={`file-upload-container ${disabled ? \"disabled\" : \"\"}`}\r\n        // onDragOver={handleDragOver}\r\n      >\r\n        <h2>\r\n          {disabled ? \"Please select an operation first\" : \"Drag & Drop Files\"}\r\n        </h2>\r\n        <div className=\"upload-area\">\r\n          <FileUploader\r\n            multiple={multiple}\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n            disabled={disabled}\r\n            hoverTitle={disabled ? \"\" : \"Drop here\"}\r\n          />\r\n          <div className=\"file-list\">\r\n            {files.length > 0 ? (\r\n              files.map((file, index) => (\r\n                <div\r\n                  className=\"mb-4\"\r\n                  key={index}\r\n                  style={{ display: \"flex\", alignItems: \"center\" }}\r\n                >\r\n                  <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                  <button\r\n                    onClick={handleClearFile}\r\n                    style={{\r\n                      background: \"none\",\r\n                      border: \"none\",\r\n                      cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n                      color: \"red\",\r\n                      opacity: disabled ? 0.5 : 1,\r\n                    }}\r\n                    disabled={disabled}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>{message}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport \"./Popup.css\";\r\nimport {\r\n  MSG_ADDPRODUCT_NOT_ALLOWED_ERROR,\r\n  MSG_ADDPRODUCT_RELEASED_ERROR,\r\n  MSG_EMPTYADD_ERROR,\r\n} from \"../../utils/toastMessages\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst AvailablePlant = forwardRef(\r\n  ({ data, columns, addedItem, CAName, state }, ref) => {\r\n    const { showWarningToast } = useToast();\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    useEffect(() => {\r\n      setRowSelection({}); // Reset selection when data changes\r\n    }, [data]);\r\n\r\n    const addPlant = () => {\r\n      const selectedRows = table.getSelectedRowModel().rows;\r\n      const selectedItems = selectedRows.map(\r\n        (item) => item.original[\"Available Plant\"]\r\n      );\r\n\r\n      if (selectedItems.length === 0) {\r\n        showWarningToast(MSG_EMPTYADD_ERROR);\r\n        return;\r\n      }\r\n\r\n      addedItem(selectedItems); // Send selected items to parent\r\n      setRowSelection({}); // Reset selection\r\n    };\r\n\r\n    // Expose the addPlant function to parent\r\n    useImperativeHandle(ref, () => ({\r\n      addPlant,\r\n    }));\r\n\r\n    const enhancedColumns = useMemo(() => {\r\n      const selectionColumn = {\r\n        id: \"select\",\r\n        cell: ({ row }) => (\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={row.getIsSelected()}\r\n            onChange={row.getToggleSelectedHandler()}\r\n          />\r\n        ),\r\n      };\r\n      return [selectionColumn, ...columns];\r\n    }, [columns]);\r\n\r\n    const table = useReactTable({\r\n      data,\r\n      columns: enhancedColumns,\r\n      state: { rowSelection },\r\n      enableRowSelection: true,\r\n      onRowSelectionChange: setRowSelection,\r\n      getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary me-3\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(true));\r\n            }}\r\n          >\r\n            Select All\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(false));\r\n            }}\r\n          >\r\n            Deselect All\r\n          </button>\r\n        </div>\r\n\r\n        {table.getRowModel().rows.length > 0 ? (\r\n          <div className=\"overflow-auto\" style={{ maxHeight: \"60vh\" }}>\r\n            {table.getRowModel().rows.map((row) => (\r\n              <div\r\n                key={row.id}\r\n                className=\"p-3 border-bottom d-flex align-items-center\"\r\n                style={{\r\n                  backgroundColor: row.getIsSelected() ? \"#d5e8f2\" : \"inherit\",\r\n                }}\r\n              >\r\n                <div className=\"me-3\">\r\n                  {flexRender(\r\n                    row.getVisibleCells()[0].column.columnDef.cell,\r\n                    row.getVisibleCells()[0].getContext()\r\n                  )}\r\n                </div>\r\n                <div>{row.original[columns[0].accessorKey]}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-muted p-3\">No data available</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AvailablePlant;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { refreshWidgetData } from \"../../services/api/refreshService\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport {\r\n  MSG_REFRESH_ERROR,\r\n  MSG_REFRESH_SUCCESS,\r\n} from \"../../utils/toastMessages\";\r\nimport store from \"../../store\"; // ✅ Import Redux store directly\r\nimport Loader from \"../../components/Loader/Loader\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\n\r\nconst WidgetLifecycle = () => {\r\n  const { handleDrop } = useBOSDropableArea();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  console.log(\"---[WidgetLifecycle]--- starts\");\r\n\r\n  const isAutoTriggeredRefresh = (trace) => {\r\n    return trace.some(\r\n      (line) =>\r\n        line.includes(\"UWA_Frame_Alone.js\") || line.includes(\"bundle-min.js\")\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!window.widget) return;\r\n\r\n    // console.log(\"[WidgetLifecycle] 📌 Registering `onRefresh` event...\");\r\n\r\n    const onRefresh = async () => {\r\n      const trace = new Error().stack.split(\"\\n\");\r\n\r\n      // ✅ Check if refresh was manually triggered\r\n      const userClickedRefresh = sessionStorage.getItem(\"userClickedRefresh\");\r\n\r\n      if (isAutoTriggeredRefresh(trace) && !userClickedRefresh) {\r\n        console.warn(\r\n          \"[WidgetLifecycle] ⛔ Auto-refresh detected. Ignoring unwanted `onRefresh`.\"\r\n        );\r\n        return; // ✅ Block auto-triggered refresh\r\n      }\r\n\r\n      // console.log(\"[WidgetLifecycle] 🔄 `onRefresh` triggered!\");\r\n      // ✅ Reset manual refresh flag so next refresh isn't blocked\r\n      sessionStorage.removeItem(\"userClickedRefresh\");\r\n      // console.log(\r\n      //   \"Stored Flag in widgt lifecycle:\",\r\n      //   sessionStorage.getItem(\"userClickedRefresh\")\r\n      // );\r\n\r\n      setLoading(true);\r\n\r\n      const latestState = store.getState();\r\n      const latestDraggedData =\r\n        latestState.droppedObject.droppedObjectData.initialDraggedData;\r\n\r\n      if (!latestDraggedData?.data?.items?.length) {\r\n        console.error(\r\n          \"[WidgetLifecycle] ⚠️ `initialDraggedData` is missing or invalid:\",\r\n          latestDraggedData\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // console.log(\r\n        //   \"[WidgetLifecycle] 🚀 Refreshing widget with latest data...\"\r\n        // );\r\n        await refreshWidgetData(latestDraggedData.data.items, handleDrop);\r\n      } catch (error) {\r\n        console.error(\"[WidgetLifecycle] ❌ Error during refresh:\", error);\r\n        showErrorToast(MSG_REFRESH_ERROR);\r\n      } finally {\r\n        setLoading(false); // ✅ Stop Loader when refresh completes\r\n        showSuccessToast(MSG_REFRESH_SUCCESS);\r\n      }\r\n    };\r\n    console.trace(\"[WidgetLifecycle] 🔄 `onRefresh` was called from:\");\r\n    window.widget.addEvent(\"onRefresh\", onRefresh);\r\n    // console.log(\r\n    //   \"[WidgetLifecycle] ✅ `onRefresh` event registered successfully\"\r\n    // );\r\n  }, []); // ✅ Runs only once\r\n\r\n  return loading ? <Loader /> : null;\r\n};\r\n\r\nexport default WidgetLifecycle;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setParentDetailsLoading,\r\n  setSpecDocument,\r\n  setDocumentCreationData\r\n} from \"../store/droppedObjectSlice\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService, loadWAFData, fetchData } from \"../utils/helpers\";\r\n\r\nconst useDocumentCreationWidget = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  let email = window.widget.getValue(\"email\");\r\n\r\n  console.log(\"Email in usedocumentCreationWidget:\", email);\r\n  // console.log(\"Security context using preferences are\", securitycontext);\r\n\r\n  const handleDocumentCreationWidget = async (\r\n    collabSpace,\r\n    state,\r\n    objectId,\r\n    type,\r\n    parentName,\r\n    parentRevision\r\n  ) => {\r\n    try {\r\n      console.log(\"Object id is:\", objectId);\r\n      console.log(\"Object type is:\", type);\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      console.log(\"[useBOSWidget] CSRF Headers:\", headers);\r\n\r\n      // Step 1: Call Enovia Web Service\r\n      let baseURL = `${ENOVIA_BASE_URL}/resources/v1/modeler/documents/parentId/${objectId}?parentRelName=SpecificationDocument`;\r\n\r\n      let parentDirection = type === \"Document\" ? \"to\" : \"from\";\r\n\r\n      let urlObjWAF = `${baseURL}&parentDirection=${parentDirection}`;\r\n      let ChildObject = await callEnoviaWebService(\r\n        \"GET\",\r\n        urlObjWAF,\r\n        \"\",\r\n        headers\r\n      );\r\n      console.log(\"SpecDetails Response: document creation\", ChildObject);\r\n\r\n      if (\r\n        ChildObject &&\r\n        ChildObject.status &&\r\n        ChildObject.output.data.length > 0\r\n      ) {\r\n        let ChildObjectDocument = ChildObject.output.data.map((sSpec) => ({\r\n          id: sSpec.id,\r\n          title:\r\n            sSpec.dataelements.title && sSpec.dataelements.title.trim() !== \"\"\r\n              ? sSpec.dataelements.title\r\n              : sSpec.dataelements.secondaryTitle,\r\n          revision: sSpec.dataelements.revision,\r\n          state: sSpec.dataelements.stateNLS,\r\n          name: sSpec.dataelements.name,\r\n        }));\r\n\r\n        console.log(\r\n          \"[useBOSWidget] Extracted Spec Documents:\",\r\n          ChildObjectDocument\r\n        );\r\n        // if type is Document and then iterate ovet the\r\n        if (type === \"Document\") {\r\n          const revisionBody = {\r\n            data: [],\r\n          };\r\n          ChildObjectDocument.forEach((child) => {\r\n            const body = {\r\n              id: child.id,\r\n              identifier: child.id,\r\n              type: \"VPMReference\",\r\n              source: `${ENOVIA_BASE_URL}`,\r\n              relativePath: `/resources/v1/modeler/dseng/dseng:EngItem/${child.id}`,\r\n            };\r\n            revisionBody.data.push(body);\r\n          });\r\n          const RevisionUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/version/getGraph`;\r\n          const response = await callEnoviaWebService(\r\n            \"POST\",\r\n            RevisionUrl,\r\n            revisionBody,\r\n            headers\r\n          );\r\n          console.log(\"response is:\", response);\r\n          response.output.results.forEach((item) => {\r\n            // Find the latest version based on the 'revision' key\r\n            const latestVersion = item.versions.reduce((latest, current) => {\r\n              return convertRevisionToNumber(current.revision) >\r\n                convertRevisionToNumber(latest.revision)\r\n                ? current\r\n                : latest;\r\n            });\r\n\r\n            // Update 'isLatestRevision' for only the matching document\r\n            ChildObjectDocument = ChildObjectDocument.map((doc) => {\r\n              if (item.versions.some((version) => version.id === doc.id)) {\r\n                return {\r\n                  ...doc,\r\n                  isLatestRevision:\r\n                    doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n                };\r\n              }\r\n              return doc;\r\n            });\r\n          });\r\n\r\n          // Function to convert revision to a comparable numeric value\r\n          function convertRevisionToNumber(rev) {\r\n            if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n            let number = 0;\r\n            for (let i = 0; i < rev.length; i++) {\r\n              number =\r\n                number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n            }\r\n            return number; // Handles A-Z, AA-ZZ revisions\r\n          }\r\n\r\n          console.log(\"ChildObjectDocument is:\", ChildObjectDocument);\r\n        }\r\n        let requestBody;\r\n        let getUrl;\r\n        if (type === \"Document\") {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestSpecItemDetails\";\r\n          requestBody = {\r\n            SpecName: parentName, // Replace with actual SpecName if dynamic\r\n            SpecRevision: parentRevision, // Replace with actual SpecRevision if dynamic\r\n            Items: ChildObjectDocument.map((obj) => ({\r\n              ItemName: obj.name, // Replace dynamically if needed\r\n              ItemRevision: obj.revision,\r\n            })),\r\n          };\r\n        } else {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestItemSpecDetails\";\r\n          requestBody = {\r\n            ItemName: parentName, // Replace with actual ItemName if dynamic\r\n            ItemRevision: parentRevision, // Replace with actual revision if dynamic\r\n            Specifications: ChildObjectDocument.map((obj) => ({\r\n              SpecName: obj.name,\r\n              SpecRevision: obj.revision,\r\n            })),\r\n          };\r\n        }\r\n\r\n        console.log(\"Requested Body is:\", requestBody);\r\n\r\n        const response = await fetchData(\"POST\", getUrl, requestBody);\r\n\r\n        console.log(\"the response from node API is:\", response);\r\n\r\n        let mergedData = [];\r\n        if (response?.data?.data?.Specifications) {\r\n          // **Case 1: API Response Contains \"Specifications\"**\r\n          response.data.data.Specifications.forEach((spec) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (obj) =>\r\n                obj.name === spec.SpecName && obj.revision === spec.SpecRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              childName: spec.SpecName,\r\n              childRevision: spec.SpecRevision,\r\n              PrintOnPurchaseOrderRequired: spec.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: spec.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: spec.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: spec.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": spec[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else if (response?.data?.data?.Items) {\r\n          // get all the id's\r\n\r\n          // **Case 2: API Response Contains \"Items\"**\r\n          response.data.data.Items.forEach((item) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (doc) =>\r\n                doc.name === item.ItemName && doc.revision === item.ItemRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childName: item.ItemName,\r\n              childRevision: item.ItemRevision,\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              PrintOnPurchaseOrderRequired: item.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: item.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: item.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: item.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": item[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else {\r\n          console.warn(\"[useBOSWidget] Unexpected API response format.\");\r\n        }\r\n        console.log(\r\n          \"[useBOSWidget] Final Merged Data for Dispatch:\",\r\n          mergedData\r\n        );\r\n        dispatch(setDocumentCreationData(ChildObject.output.data));\r\n        dispatch(setSpecDocument(mergedData));\r\n        // You can now dispatch or return this data as needed\r\n      } else {\r\n        console.warn(\"[useDocumentCreationWidget] No connected childs.\");\r\n        dispatch(setSpecDocument([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[useDocumentCreationWidget] Error:\", error);\r\n      throw error; // Let the caller handle the error\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading state is reset\r\n    }\r\n  };\r\n\r\n  return { handleDocumentCreationWidget };\r\n};\r\n\r\nexport default useDocumentCreationWidget;\r\n\r\n// response.output.results.forEach((item) => {\r\n//   // Find the latest version based on the 'revision' key\r\n//   const latestVersion = item.versions.reduce((latest, current) => {\r\n//     return convertRevisionToNumber(current.revision) > convertRevisionToNumber(latest.revision)\r\n//       ? current\r\n//       : latest;\r\n//   });\r\n\r\n//   // Update 'isLatestRevision' for each document\r\n//   ChildObjectDocument = ChildObjectDocument.map((doc) => ({\r\n//     ...doc,\r\n//     isLatestRevision: doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n//   }));\r\n// });\r\n\r\n// // Function to convert revision to a comparable numeric value\r\n// function convertRevisionToNumber(rev) {\r\n//   if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n//   let number = 0;\r\n//   for (let i = 0; i < rev.length; i++) {\r\n//     number = number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n//   }\r\n//   return number; // Handles A-Z, AA-ZZ revisions\r\n// }\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDragObjectDetailsDocumentCreation, setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  getDroppedObjectDetails,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_DOCUMENT_CREATION_OBJECT_TYPE,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport useDocumentCreationWidget from \"./useDocumentCreationWidget\";\r\n\r\nconst useDocumentCreationDropableArea = (widgetType) => {\r\n  console.log(\"widgetType useDocumentCreationDropableArea\", widgetType)\r\n  const { showErrorToast } = useToast();\r\n  const { handleDocumentCreationWidget } = useDocumentCreationWidget();\r\n\r\n  // const [csrfHeaders, setCsrfHeaders] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n          dispatch(setDragObjectDetailsDocumentCreation(draggedObjectData));\r\n\r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handleDocumentCreationWidget(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              draggedObjectData.Name,\r\n              draggedObjectData[\"Dropped Revision\"]\r\n            );\r\n          }\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, handleDocumentCreationWidget]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] handleDrop called with dataItems:\", dataItems);\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          const validTypes = [\"VPMReference\"];\r\n          const objectType = dataItems[0]?.objectType;\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_DOCUMENT_CREATION_OBJECT_TYPE);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDocumentCreationDropableArea;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../components/DragAndDrop/DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DragAndDropComponent = ({ widgetType }) => {\r\n  console.log(\"widgetType DragAndDropComponent\", widgetType);\r\n  const { handleDrop } = useDocumentCreationDropableArea(widgetType);\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDocumentCreationShowDetailPage } from \"../../store/droppedObjectSlice\";\r\nimport store from \"../../store/index\";\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n\r\n  let cardData = {\r\n    title: item.Title || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nfunction formatDateToCustom(input) {\r\n  const date = new Date(input);\r\n  const options = { timeZone: 'Asia/Kolkata' };\r\n  const localDate = new Date(date.toLocaleString('en-US', options));\r\n  const pad = (n) => n.toString().padStart(2, '0');\r\n  const month = pad(localDate.getMonth() + 1);\r\n  const day = pad(localDate.getDate());\r\n  const year = localDate.getFullYear();\r\n  let hours = localDate.getHours();\r\n  const minutes = pad(localDate.getMinutes());\r\n  const seconds = pad(localDate.getSeconds());\r\n  const ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12 || 12;\r\n  return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\r\n}\r\nexport const getTableData = (tableData, type) => {\r\n  console.log(\"tableData from frunction getTableData\", tableData);\r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    let rowData = {\r\n      Name: data?.dataelements?.name || \"N/A\",\r\n      Title: data?.dataelements?.title || \"N/A\",\r\n      Revision: data?.dataelements?.revision || \"1\",\r\n      State: data?.dataelements?.state || \"N/A\",\r\n      TypeNLS: data?.dataelements?.typeNLS || \"N/A\",\r\n      // CollabSpaceTitle: data?.dataelements?.collabSpaceTitle || \"N/A\",\r\n      Originated: data?.dataelements?.originated && formatDateToCustom(data?.dataelements?.originated) || \"N/A\",\r\n      Modified: data?.dataelements?.modified && formatDateToCustom(data?.dataelements?.modified) || \"N/A\",\r\n      IsLatestRevision: data?.dataelements?.isLatestRevision || \"N/A\",\r\n    };\r\n\r\n    // Add \"IsLatest\" key only if type === \"Document\"\r\n    // if (type === \"Document\") {\r\n    //   rowData.IsLatest = data?.childLatest || \"FALSE\";\r\n    // }\r\n\r\n    return rowData;\r\n  });\r\n};\r\n\r\nexport const tableColumns = (type, latestRevision, droppedRevision) => {\r\n\r\n  const editableColumns = [\r\n    \"Title\",\r\n  ].map((columnKey) => ({\r\n    accessorKey: columnKey,\r\n    header: columnKey,\r\n    cell: ({ row, getValue, table }) => {\r\n      // Determine if the cell should be editable\r\n      const handleCellClick = (e) => {\r\n        store.dispatch(setDocumentCreationShowDetailPage());\r\n        console.log(\"handleCellClick\", row, getValue());\r\n      };\r\n\r\n      return <span className=\"hyperlink-title-cell\" onClick={handleCellClick}>{getValue()}</span>\r\n    },\r\n  }));\r\n\r\n  const baseColumns = [\r\n    // { accessorKey: \"Title\", header: \"Title\" },\r\n    { accessorKey: \"Name\", header: \"Name\" },\r\n    // { accessorKey: \"CollabSpaceTitle\", header: \"collabspacetitle\" },\r\n    { accessorKey: \"Revision\", header: \"Revision\" },\r\n    { accessorKey: \"IsLatestRevision\", header: \"IsLatestRevision\" },\r\n    { accessorKey: \"Modified\", header: \"Modified\" },\r\n    { accessorKey: \"State\", header: \"State\" },\r\n    { accessorKey: \"TypeNLS\", header: \"Type\" },\r\n    { accessorKey: \"Originated\", header: \"Originated\" },\r\n  ];\r\n\r\n  return [...editableColumns, ...baseColumns];\r\n};","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\nconst processDataInChunks = (data, chunkSize = 1000) => {\r\n  const chunks = [];\r\n  for (let i = 0; i < data.length; i += chunkSize) {\r\n    chunks.push(data.slice(i, i + chunkSize));\r\n  }\r\n  return chunks;\r\n};\r\n\r\nconst validateFile = (file, collabSpaceTitles, selectedOperation) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"🔍 Starting template validation...\");\r\n    console.log({\r\n      operation: selectedOperation,\r\n      fileName: file.name,\r\n    });\r\n\r\n    const operationNames = {\r\n      1: \"Physical Product\",\r\n    };\r\n\r\n    const matchedOperation = operationNames[selectedOperation];\r\n    const expectedHeaders =\r\n      config.DocumentCreation[matchedOperation]?.fileHeaders || [];\r\n    const mandatoryAttributes =\r\n      config.DocumentCreation[matchedOperation]?.mandatoryAttributes || [];\r\n\r\n    if (!selectedOperation) {\r\n      reject({\r\n        errors: [\"Please select an operation first.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!Array.isArray(collabSpaceTitles)) {\r\n      console.error(\"❌ Invalid Collaborative Space list\");\r\n      reject({\r\n        errors: [\"Internal error: Invalid Collaborative Space list.\"],\r\n        headers: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = async (e) => {\r\n      const workbook = XLSX.read(e.target.result, {\r\n        type: \"binary\",\r\n        dense: true,\r\n        cellDates: true,\r\n        cellNF: false,\r\n        cellText: false,\r\n      });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const uploadedHeaders =\r\n        XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n\r\n      // Template header validation\r\n      const headerMismatch = !expectedHeaders.every((header) =>\r\n        uploadedHeaders.includes(header)\r\n      );\r\n\r\n      if (headerMismatch) {\r\n        console.error(\"❌ Template mismatch detected!\");\r\n        reject({\r\n          isTemplateMismatch: true,\r\n          errors: [\r\n            \"The template uploaded does not match the selected operation.\",\r\n          ],\r\n          headers: uploadedHeaders,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const headers =\r\n        XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0] || [];\r\n\r\n      if (!headers || headers.length === 0) {\r\n        reject({\r\n          errors: [\"The uploaded file has no content or is empty.\"],\r\n          headers: [],\r\n        });\r\n        return;\r\n      }\r\n\r\n      const allSheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n\r\n      if (allSheetData.length === 0) {\r\n        reject({\r\n          errors: [\"The uploaded file contains headers but no data rows.\"],\r\n          headers,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const chunks = processDataInChunks(allSheetData, 1000);\r\n      const validationErrors = [];\r\n      const invalidPrefixes = [\"MMI-\", \"RS-\", \"DAN-\", \"RSC-\", \"TF-\", \"ROXA-\"];\r\n\r\n      // Error counters\r\n      let errorStats = {\r\n        mandatory: 0,\r\n        collabSpace: 0,\r\n        einPrefix: 0,\r\n        docPrefix: 0,\r\n      };\r\n\r\n      // Convert collabSpaceTitles to lowercase for case-insensitive comparison\r\n      const lowerCaseCollabSpaceTitles = collabSpaceTitles.map(title => title.toLowerCase());\r\n\r\n      for (let chunkIndex = 0; chunkIndex < chunks.length; chunkIndex++) {\r\n        const chunk = chunks[chunkIndex];\r\n        const progress = Math.round(((chunkIndex + 1) / chunks.length) * 100);\r\n\r\n        chunk.forEach((row, indexInChunk) => {\r\n          const globalRowIndex = chunkIndex * 1000 + indexInChunk;\r\n\r\n          // Mandatory fields validation\r\n          mandatoryAttributes.forEach((field) => {\r\n            if (!row[field] || row[field].toString().trim() === \"\") {\r\n              errorStats.mandatory++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"${field}\" is required but is empty`\r\n              );\r\n            }\r\n          });\r\n\r\n          // Collaborative Space validation\r\n          if (\r\n            matchedOperation === \"Physical Product\"\r\n          ) {\r\n            const userCollabSpace = row[\"Collaborative Space\"]?.trim().toLowerCase() || \"\";\r\n            if (!userCollabSpace || !lowerCaseCollabSpaceTitles.includes(userCollabSpace)) {\r\n              errorStats.collabSpace++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2}: \"${userCollabSpace\r\n                  ? `You are not allowed to create in \"Collaborative Space -\" (${userCollabSpace})`\r\n                  : 'Collaborative Space\" is Missing or Empty'\r\n                }`\r\n              );\r\n            }\r\n          }\r\n\r\n          // EIN Number / Document Name validation\r\n          let valueToValidate = null;\r\n          let columnName = \"\";\r\n\r\n          if (\r\n            matchedOperation === \"Physical Product\") {\r\n            columnName = \"EIN Number\";\r\n            valueToValidate = row[columnName]?.toString().trim() || null;\r\n            if (\r\n              valueToValidate &&\r\n              invalidPrefixes.some((prefix) =>\r\n                valueToValidate.startsWith(prefix)\r\n              )\r\n            ) {\r\n              errorStats.einPrefix++;\r\n              validationErrors.push(\r\n                `Row ${globalRowIndex + 2\r\n                }: \"EIN Number\" value \"${valueToValidate}\" has an invalid prefix.`\r\n              );\r\n            }\r\n          }\r\n        });\r\n\r\n        // Log only at 25% intervals\r\n        if (progress % 25 === 0) {\r\n          console.log(`Processing: ${progress}% complete`, {\r\n            processedRows: (chunkIndex + 1) * 1000,\r\n            totalRows: allSheetData.length,\r\n            currentErrors: {\r\n              mandatory: errorStats.mandatory,\r\n              collaborativeSpace: errorStats.collabSpace,\r\n              einPrefix: errorStats.einPrefix,\r\n              documentPrefix: errorStats.docPrefix,\r\n              total: validationErrors.length,\r\n            },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (validationErrors.length > 0) {\r\n        console.log(\"❌ Validation completed with errors:\", {\r\n          total: validationErrors.length,\r\n          byType: errorStats,\r\n        });\r\n        reject({\r\n          errors: validationErrors,\r\n          headers,\r\n          mandatoryAttributes,\r\n        });\r\n        return;\r\n      }\r\n\r\n      console.log(\"✅ Validation completed successfully\");\r\n      resolve({\r\n        headers,\r\n        sheetData: allSheetData,\r\n        validationErrors: [],\r\n        mandatoryAttributes,\r\n      });\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.error(\" Error reading file\");\r\n      reject({\r\n        errors: [\"File reading failed.\"],\r\n        headers: [],\r\n        isTemplateMismatch: false,\r\n      });\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;\r\n","// DocumentCreationModal.jsx\r\nimport React, { useRef, useState } from \"react\";\r\nimport CustomModal from \"../Modal/customModal\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport validateFile from \"../../pages/DocumentCreation/validateFile\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst DocumentCreationModal = ({ show, onHide, onSave }) => {\r\n\r\n    const [type, setType] = useState(\"Document\");\r\n    const fileUploaderRef = useRef();\r\n    const { showErrorToast, showSuccessToast } = useToast();\r\n    const [collabTitles, setCollabTitles] = useState([]);\r\n    const [isValidating, setIsValidating] = useState(false);\r\n    const [operationChoice, setOperationChoice] = useState(\"Physical Product\");\r\n    const [errors, setErrors] = useState([]);\r\n    const [columnHeaders, setColumnHeaders] = useState([]);\r\n    const [mandatoryAttributes, setMandatoryAttributes] = useState([]);\r\n    const [formattedData, setFormattedData] = useState(null);\r\n    const [errorModalShow, setErrorModalShow] = useState(false);\r\n\r\n    const [typeDropDownData, setTypeDropDownData] = useState([\r\n        {\r\n            label: \"Document\",\r\n            val: \"Document\",\r\n        }\r\n    ])\r\n\r\n    const handleCreateDocument = () => {\r\n        onSave(type, formattedData);\r\n        onHide();\r\n    }\r\n\r\n    const handleFileUpload = async (files) => {\r\n        if (files.length === 0) return;\r\n\r\n        try {\r\n            setIsValidating(true);\r\n            console.log(\"Starting file validation...\");\r\n            console.log(\"Selected Operation:\", operationChoice);\r\n            console.log(\"File:\", files[0].name);\r\n\r\n            const validationResult = await validateFile(\r\n                files[0],\r\n                collabTitles,\r\n                operationChoice\r\n            );\r\n\r\n            const {\r\n                headers = [],\r\n                validationErrors = [],\r\n                mandatoryAttributes = [],\r\n                sheetData = [],\r\n            } = validationResult;\r\n\r\n            setColumnHeaders(headers);\r\n            setMandatoryAttributes(mandatoryAttributes);\r\n\r\n            // Map sheet data to JSON format with operation type\r\n            if (sheetData.length > 0) {\r\n                console.log(\"Sheet Data \", sheetData);\r\n                // // Generate initial mapping with default column names\r\n                // const mappedData = mapsheetData(sheetData, operationChoice);\r\n                // console.log(\"Mapped JSON data:\", mappedData);\r\n\r\n                // // Store original data for potential future manual mapping\r\n                // mappedData.originalData = sheetData;\r\n                setFormattedData({ originalData: sheetData });\r\n\r\n                // Once mappedAttributes is refreshed, apply automatic mapping\r\n                // await refreshMapping(operationChoice);\r\n                // await refreshData(operationChoice);\r\n\r\n                // Apply automatic column mapping (wait for mappedAttributes to be updated)\r\n                // setTimeout(() => {\r\n                //     console.log(\r\n                //         \"Applying automatic column mapping with:\",\r\n                //         mappedAttributes\r\n                //     );\r\n                //     if (mappedAttributes && Object.keys(mappedAttributes).length > 0) {\r\n                //         // Generate mappings automatically\r\n                //         const { simplifiedMappings } = generateColumnMappings(\r\n                //             headers,\r\n                //             mandatoryAttributes,\r\n                //             mappedAttributes\r\n                //         );\r\n\r\n                //         console.log(\"Auto-generated mappings:\", simplifiedMappings);\r\n\r\n                //         // Apply mappings to transform the data\r\n                //         if (Object.keys(simplifiedMappings).length > 0) {\r\n                //             const transformedData = transformSheetDataWithMappings(\r\n                //                 sheetData,\r\n                //                 simplifiedMappings,\r\n                //                 operationChoice,\r\n                //                 mappedAttributes // Pass mappedAttributes here\r\n                //             );\r\n\r\n                //             setFormattedData(transformedData);\r\n                //             showSuccessToast(\r\n                //                 `Data automatically mapped with ${Object.keys(simplifiedMappings).length\r\n                //                 } columns`\r\n                //             );\r\n                //         }\r\n                //     }\r\n                // }, 500); // Small delay to ensure mappedAttributes is ready\r\n            }\r\n\r\n            if (validationErrors.length === 0) {\r\n                setErrors([]);\r\n                showSuccessToast(\"File validated successfully!\");\r\n            } else {\r\n                setErrors(validationErrors);\r\n                setErrorModalShow(true);\r\n            }\r\n        } catch (errorResponse) {\r\n            console.error(\"Validation failed:\", errorResponse);\r\n\r\n            const {\r\n                errors: responseErrors = [\"Unknown validation error.\"],\r\n                headers: responseHeaders = [],\r\n                mandatoryAttributes: responseMandatoryAttributes = [],\r\n                isTemplateMismatch = false,\r\n            } = errorResponse;\r\n\r\n            // If there's a template mismatch, show error and reset widget\r\n            if (isTemplateMismatch) {\r\n                showErrorToast(\r\n                    \"The template uploaded and the selected operation do not match\"\r\n                );\r\n                handleReset(true); // Pass true to skip success toast\r\n                // Clear the file uploader\r\n                if (fileUploaderRef.current) {\r\n                    fileUploaderRef.current.handleClearFiles();\r\n                }\r\n                return;\r\n            }\r\n\r\n            // Only set these states if it's not a template mismatch\r\n            setErrors(responseErrors);\r\n            setColumnHeaders(responseHeaders);\r\n            setMandatoryAttributes(responseMandatoryAttributes);\r\n            setErrorModalShow(true);\r\n        } finally {\r\n            setIsValidating(false);\r\n        }\r\n    };\r\n\r\n    const handleReset = (skipSuccessToast = false) => {\r\n        // Reset all states to their initial values\r\n        setIsValidating(false);\r\n        setErrors([]);\r\n        setColumnHeaders([]);\r\n        setMandatoryAttributes([]);\r\n        setFormattedData(null); // Add this line\r\n\r\n        // Only show success toast if not skipped\r\n        if (!skipSuccessToast) {\r\n            showSuccessToast(\"Widget reset successfully!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CustomModal\r\n            show={show}\r\n            onHide={onHide}\r\n            title=\"New Document\"\r\n            footerButtons={[\r\n                {\r\n                    label: \"Create\",\r\n                    variant: \"primary\",\r\n                    onClick: () => {\r\n                        handleCreateDocument();\r\n                    },\r\n                },\r\n                {\r\n                    label: \"Close\",\r\n                    variant: \"secondary\",\r\n                    onClick: onHide,\r\n                },\r\n            ]}\r\n        >\r\n            <div className=\"row col-12\">\r\n                <div className=\"col-3\">\r\n                    <label>Type</label>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select\r\n                        className=\"form-select mb-2\"\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        value={type}\r\n                    >\r\n                        <option value=\"\">-- Select Column --</option>\r\n                        {typeDropDownData.map((item) => (\r\n                            <option key={item?.val} value={item?.val}>\r\n                                {item?.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n                <div className=\"col-3\">\r\n                    <label>Select File</label>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <FileUpload\r\n                        ref={fileUploaderRef}\r\n                        fileTypes={[\"XLSX\"]}\r\n                        multiple={false}\r\n                        onUpload={handleFileUpload}\r\n                        onReset={handleReset}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </CustomModal>\r\n    );\r\n};\r\n\r\nexport default DocumentCreationModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport Popup from \"../../components/Popup/Popup\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_BOS_SAVE } from \"../../utils/toastMessages\";\r\nimport MassUpdateDropdown from \"./MassUpdateDropdown\";\r\nimport DocumentCreationModal from \"../../components/Modals/DocumentCreationModal\";\r\n\r\nconst DocumentCreationToolbarCta = ({\r\n  onSave,\r\n  state,\r\n  selectedRows,\r\n  tableData,\r\n  // onMassUpdate,\r\n  type,\r\n  latestRevision,\r\n  droppedRevision,\r\n  documentCreationData,\r\n  cardData\r\n}) => {\r\n  const { showWarningToast } = useToast();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [isShowPopup, setIsShowPopup] = useState(false);\r\n\r\n  const handleShowPopup = () => {\r\n    setIsShowPopup(true);\r\n  }\r\n  const handleClosePopup = () => {\r\n    setIsShowPopup(false);\r\n  }\r\n\r\n\r\n  // const handleSaveClick = () => {\r\n  //   if (type !== \"Document\" && latestRevision !== droppedRevision) {\r\n  //     showWarningToast(MSG_BOS_SAVE);\r\n  //   } else {\r\n  //     onSave();\r\n  //   }\r\n  //   // When save button is clicked, call onSave passed as prop\r\n  //   // onSave is passed with tableData from parent\r\n  // };\r\n  // const handleMassUpdate = (column, value, scope) => {\r\n  //   if (scope === \"selected\") {\r\n  //     onMassUpdate(selectedRows, column, value);\r\n  //   } else {\r\n  //     onMassUpdate(tableData, column, value);\r\n  //   }\r\n  // };\r\n  // const editableColumns = [\r\n  //   \"Print On Purchase Order Required\",\r\n  //   \"Print On Work Order Required\",\r\n  //   \"Work Order Document Required\",\r\n  //   \"Print On report Order Required\",\r\n  //   \"SAP/JDE\",\r\n  // ];\r\n  // const [isDisable, setIsDisable] = useState(false);\r\n  // useEffect(() => {\r\n  //   if (!cardData || !documentCreationData || !Array.isArray(documentCreationData)) return;\r\n\r\n  //   const cardTitle = cardData?.title?.trim();\r\n  //   const cardEIN = cardData?.EIN?.trim();\r\n  //   const isMatched = documentCreationData?.some((item) => {\r\n  //     const itemTitle = item?.dataelements?.title?.trim();\r\n  //     const itemEIN = item?.dataelements?.EIN?.trim();\r\n\r\n  //     console.log(\"cardTitle\", cardTitle, itemTitle, cardTitle == itemTitle, cardTitle === itemTitle)\r\n  //     console.log(\"cardTitle 1111\", cardTitle, itemTitle, cardTitle == itemTitle, cardTitle === itemTitle)\r\n  //     return (itemTitle && itemTitle === cardTitle) || (itemEIN && itemEIN === cardEIN);\r\n  //   });\r\n\r\n  //   console.log(\"Matching status:\", isMatched);\r\n  //   setIsDisable(isMatched);\r\n  // }, [cardData, documentCreationData]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <div className=\"d-flex\">\r\n        {/* <button\r\n          className=\"btn btn-outline-success btn-lg m-2\"\r\n          onClick={handleSaveClick}\r\n        >\r\n          Save\r\n        </button> */}\r\n        {\r\n          tableData.length > 0 ? <></> :\r\n            <button\r\n              className={`btn btn-outline-primary btn-lg m-2 ${tableData.length > 0 ? 'disabled' : ''}`}\r\n              disabled={tableData.length > 0 ? true : false}\r\n              onClick={() => {\r\n                //   type !== \"Document\" && latestRevision !== droppedRevision\r\n                //     ? showWarningToast(MSG_BOS_SAVE)\r\n                //     : setShowDropdown((prev) => !prev)\r\n                // }\r\n                // onSave();\r\n                handleShowPopup();\r\n              }\r\n              }\r\n            >\r\n              New Document\r\n            </button>\r\n        }\r\n      </div>\r\n      <DocumentCreationModal show={isShowPopup} onHide={handleClosePopup} onSave={onSave} />\r\n      {/* Dropdown appears below */}\r\n      {/* {showDropdown && (\r\n        <div className=\"mt-2\">\r\n          <MassUpdateDropdown\r\n            editableColumns={editableColumns}\r\n            selectedRows={selectedRows}\r\n            onApplyUpdate={handleMassUpdate}\r\n            valueOptions={[\"Yes\", \"No\"]}\r\n            onClose={() => setShowDropdown(false)}\r\n          />\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCreationToolbarCta;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../pages/DocumentCreation/DragAndDrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./DocumentCreationWidget.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport {\r\n  setDocumentCreationHideDetailPage,\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./DocumentCreationHelpers\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { saveData } from \"../../services/api/PlantAssignment/saveTableDataService\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\nimport DocumentCreationToolbarCta from \"../DocumentCreation/DocumentCreationWidgetToolbarCta\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport useDocumentCreationWidget from \"../../hooks/useDocumentCreationWidget\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DocumentCreationWidget = () => {\r\n  const { initializeDroppableArea, loading } = useDocumentCreationDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [specData, setSpecData] = useState([]);\r\n  const [selectableRows, setSelectableRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (specData.length) {\r\n  //     setTableData(specData.map((item) => ({ ...item, changedCells: {} })));\r\n  //   }\r\n  // }, [specData]);\r\n\r\n  const handleSave = async (type, formatedFileData) => {\r\n    console.log(\"Table Data is:\", tableData);\r\n    console.log(\"formatedFileData\", formatedFileData);\r\n    setScreenLoader(true);\r\n    // console.log(\"Type of Parent:\", type);\r\n    // let parentData = [];\r\n    // let ChildNameKey;\r\n    // let ChildRevKey;\r\n    // let ChildStateKey;\r\n    // let ChildIdKey;\r\n    // if (type === \"Document\") {\r\n    //   parentData = {\r\n    //     SpecName: droppedObjectData.cardData.Name,\r\n    //     SpecRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     SpecState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     SpecID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK CARD DATA\r\n    //     // SpecState need to be added.\r\n    //   };\r\n    //   ChildNameKey = \"ItemName\";\r\n    //   ChildRevKey = \"ItemRevision\";\r\n    //   ChildStateKey = \"ItemState\";\r\n    //   ChildIdKey = \"ItemID\";\r\n    // } else {\r\n    //   console.log(\"It's a physical Product\");\r\n    //   parentData = {\r\n    //     ItemName: droppedObjectData.cardData.Name,\r\n    //     ItemRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     ItemState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     ItemID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK THIS\r\n    //     // need to add Maturity State as Item State and ItemId is Dropped Revision Id.\r\n    //   };\r\n    //   ChildNameKey = \"SpecName\";\r\n    //   ChildRevKey = \"SpecRevision\";\r\n    //   ChildStateKey = \"SpecState\";\r\n    //   ChildIdKey = \"SpecID\";\r\n    // }\r\n\r\n    const formattedData = {\r\n      \"data\": [\r\n        {\r\n          \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n          // \"type\": droppedObjectData.cardData['Type'],\r\n          \"type\": type,\r\n          \"dataelements\": {\r\n            \"name\": (cardData?.EIN != \"N/A\" && cardData?.EIN != \"\" && cardData?.EIN != undefined) ? cardData?.EIN : cardData?.title != \"N/A\" ? cardData?.title : \"\",\r\n            \"policy\": \"Document Release\",\r\n            \"state\": \"IN_WORK\",\r\n            \"title\": (cardData?.EIN != \"N/A\" && cardData?.EIN != \"\" && cardData?.EIN != undefined) ? cardData?.EIN : cardData?.title != \"N/A\" ? cardData?.title : \"\",\r\n            \"description\": cardData?.Description !== \"N/A\" ? cardData?.Description : \"\",\r\n            \"comments\": \"Test Document\",\r\n            \"collabspace\": \"Micro Motion\",\r\n            \"parentRelName\": \"SpecificationDocument\",\r\n            \"parentDirection\": \"from\",\r\n            \"extensions\": [\r\n              \"IPML.Automatic\"\r\n            ],\r\n          },\r\n          \"relateddata\": {\r\n            \"parents\": [\r\n              {\r\n                \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n                \"type\": \"VPMRefrence\",\r\n                \"updateAction\": \"CONNECT\",\r\n                \"dataelements\": {\r\n                  \"parentRelName\": \"SpecificationDocument\"\r\n                },\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n\r\n    //   return {\r\n    //     [ChildNameKey]: matchingData ? matchingData.childName : null, // Use found childName\r\n    //     [ChildRevKey]: item.Revision, // Dynamic key based on type\r\n    //     [ChildStateKey]: matchingData ? matchingData.childState : null, // need to check this\r\n    //     [ChildIdKey]: matchingData ? matchingData.ID : null, //\r\n    //     // something needs to be done here\r\n    //     // [ChildStateKey]:\r\n    //     ...parentData, // Merge Parent Data\r\n    //     PrintOnPurchaseOrderRequired: item[\"Print On Purchase Order Required\"],\r\n    //     PrintOnWorkOrderRequired: item[\"Print On Work Order Required\"],\r\n    //     WorkOrderDocumentRequired: item[\"Work Order Document Required\"],\r\n    //     PrintOnReportOrderRequired: item[\"Print On report Order Required\"],\r\n    //     \"SAP/JDE\": item[\"SAP/JDE\"],\r\n    //   };\r\n    // });\r\n\r\n    // formattedData.sort((a, b) => {\r\n    //   if (a.SpecName !== b.SpecName) {\r\n    //     return a.SpecName.localeCompare(b.SpecName);\r\n    //   }\r\n    //   return Number(a.SpecRevision) - Number(b.SpecRevision);\r\n    // });\r\n    const headers = await fetchCsrfToken();\r\n    console.log(\"Formatted Data:\", formattedData, headers);\r\n    const saveURL =\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/documents\";\r\n    let response;\r\n    await callEnoviaWebService(\"POST\", saveURL, formattedData, headers).then((res) => {\r\n      response = res;\r\n      return response;\r\n    }).catch((error) => {\r\n      console.log(\"Error in catch\", error);\r\n      response = error;\r\n      return response;\r\n    });\r\n    console.log(\"the response from node API is:\", response);\r\n    console.log(\"the response from node API is:===output==\", response.output);\r\n    if (response.status === true && response.output.statusCode === 200) {\r\n      showSuccessToast(MSG_SAVE_SUCCESS);\r\n      console.log(\"response.output.data\", response.output.data);\r\n      setTableData(response.output.data);\r\n      // setSpecData(tableData);\r\n      setScreenLoader(false);\r\n    } else {\r\n      showErrorToast(response?.errorMessage);\r\n      setScreenLoader(false);\r\n    }\r\n  };\r\n\r\n  // const handleMassUpdate = async (data, column, value) => {\r\n  //   console.log(\"Data when the Mass Update is Clicked:\", data);\r\n  //   console.log(\"Columns to Change:\", column);\r\n  //   console.log(\"Value after change:\", value);\r\n\r\n  //   const updatedData = data.map((row) => ({\r\n  //     ...row,\r\n  //     [column]: value, // Update the specified column with the new value\r\n  //   }));\r\n\r\n  //   console.log(\"Updated Data is:\", updatedData);\r\n  //   console.log(\"Table Data is:\", tableData);\r\n\r\n  //   // Merge updatedData into tableData based on matching Title & Revision\r\n  //   const mergedData = tableData.map((row) => {\r\n  //     const updatedRow = updatedData.find(\r\n  //       (updated) =>\r\n  //         updated.Title === row.Title && updated.Revision === row.Revision\r\n  //     );\r\n\r\n  //     return updatedRow ? updatedRow : row; // Use updated row if found, else keep original row\r\n  //   });\r\n\r\n  //   console.log(\"Merged Data:\", mergedData);\r\n  //   updateTableData(mergedData);\r\n  // };\r\n\r\n  console.log(\"Table Data after Adding:\", tableData);\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  );\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData\", droppedObjectData);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n  const proposedChanges = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.proposedChanges\r\n  );\r\n  console.log(\"Proposed Changes are:\", proposedChanges);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const bosData = useSelector((state) => state.droppedObject.BOSObjectData);\r\n\r\n  console.log(\"Bos data in BOS Widget is:\", bosData);\r\n  const bosSpecDocument = useSelector(\r\n    (state) => state.droppedObject.BOSObjectData.specDocument\r\n  );\r\n  console.log(\"BOSObjectData\", bosSpecDocument);\r\n\r\n  const documentCreationData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.data\r\n  );\r\n\r\n  const dropObjectDetailsData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.dropObjectDetails\r\n  );\r\n\r\n  const showDetailPageDocumentCreation = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.showDetailPage\r\n  );\r\n  console.log(\"documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n  console.log(\"showDetailPageDocumentCreation\", showDetailPageDocumentCreation);\r\n\r\n  // const updateTableData = (updatedData) => {\r\n  //   const newDataWithChanges = updatedData.map((newItem) => {\r\n  //     const originalItem = specData.find(\r\n  //       (oldItem) =>\r\n  //         oldItem.Title === newItem.Title &&\r\n  //         oldItem.Revision === newItem.Revision\r\n  //     );\r\n\r\n  //     if (!originalItem) return { ...newItem, changedCells: {} };\r\n\r\n  //     // Track changed cells\r\n  //     const changedCells = {};\r\n  //     Object.keys(newItem).forEach((key) => {\r\n  //       if (newItem[key] !== originalItem[key]) {\r\n  //         changedCells[key] = true; // Mark this cell as changed\r\n  //       }\r\n  //     });\r\n\r\n  //     return { ...newItem, changedCells };\r\n  //   });\r\n\r\n  //   setTableData(newDataWithChanges);\r\n  // };\r\n\r\n  console.log(\"Table Data is:\", tableData);\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  const newTableData = useMemo(\r\n    () => getTableData(documentCreationData, type),\r\n    [documentCreationData, type]\r\n  );\r\n  useEffect(() => {\r\n    setSpecData(newTableData);\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n  const columns = useMemo(\r\n    () =>\r\n      tableColumns(\r\n        type,\r\n        droppedObjectData?.cardData[\"Latest Revision\"],\r\n        droppedObjectData?.cardData[\"Dropped Revision\"]\r\n      ),\r\n    [type, droppedObjectData?.cardData]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n      })\r\n    );\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n  };\r\n  const optimizedTableData = useMemo(() =>\r\n    getTableData(tableData, cardData), [tableData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n\r\n    // Filter based on the conditions\r\n    const filteredData = documentCreationData.filter((item) => {\r\n      const itemTitle = item?.dataelements?.title?.trim();\r\n      const objEIN = dropObjectDetailsData?.EIN?.trim();\r\n      const objTitle = dropObjectDetailsData?.Title?.trim();\r\n\r\n      if (objEIN) {\r\n        return itemTitle === objEIN;\r\n      } else {\r\n        return itemTitle === objTitle;\r\n      }\r\n    });\r\n    console.log(\"filteredData filteredData\", filteredData);\r\n\r\n    setTableData(filteredData);\r\n  }, [documentCreationData])\r\n\r\n  console.log(\"cardData\", cardData);\r\n  console.log(\"cardData11111=>type\", type);\r\n  console.log(\"cardData11111=>tableData\", tableData);\r\n  console.log(\"cardData11111=>optimizedTableData\", optimizedTableData);\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenLoader && (\r\n        <div className=\"loading-overlay\">\r\n          <Loader />\r\n          <p>Saving...</p>\r\n        </div>\r\n      )}\r\n      {!isDropped && !loading && !isTableLoading && <DragAndDropComponent widgetType=\"documentCreationWidget\" />}\r\n      {loading && <Loader />}\r\n      {isDropped && (\r\n        <>\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {cardData && (\r\n                <CardWithDragAndDrop data={cardData} widgetType=\"documentCreationWidget\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"wrapper-cta\">\r\n                {\r\n                  showDetailPageDocumentCreation === false ?\r\n                    <>\r\n                      <DocumentCreationToolbarCta\r\n                        onSave={handleSave}\r\n                        type={type}\r\n                        latestRevision={\r\n                          droppedObjectData?.cardData[\"Latest Revision\"]\r\n                        }\r\n                        droppedRevision={\r\n                          droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                        }\r\n                        selectedRows={selectedTableRows}\r\n                        state={state}\r\n                        tableData={optimizedTableData}\r\n                        documentCreationData={documentCreationData}\r\n                        cardData={cardData}\r\n                      // onMassUpdate={handleMassUpdate}\r\n                      />\r\n                      <ReusableTable\r\n                        showActionButtons={false}\r\n                        key={tableKey}\r\n                        data={optimizedTableData}\r\n                        columns={columns}\r\n                        // meta={{ updateTableData }}\r\n                        type={type}\r\n                        // latestRevision={\r\n                        //   droppedObjectData?.cardData[\"Latest Revision\"]\r\n                        // }\r\n                        // droppedRevision={\r\n                        //   droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                        // }\r\n                        widgetType=\"Doc_Creation_Widget\"\r\n                        onSelectableRowsChange={setSelectableRows}\r\n                      />\r\n                    </> :\r\n                    <div>\r\n                      Here Is Data\r\n                      <button className=\"btn btn-secondary\" onClick={() => { dispatch(setDocumentCreationHideDetailPage()); }}>Close</button>\r\n                    </div>\r\n\r\n                }\r\n\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DocumentCreationWidget;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\n// import WidgetLifecycle from \"./WidgetLifecycle\";\r\n// import BOSWidget from \"./BOSWidget\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport DocumentCreationWidget from \"./DocumentCreationWidget\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <WidgetLifecycle />\r\n      <DocumentCreationWidget \r\n      />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\r\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { fetchData, loadWAFData } from \"../../../utils/helpers\";\r\n \r\n// Function to extract IDs from titles\r\nconst extractIdsFromTitles = (data, allPlants) => {\r\n  console.log(\"Data Received for ID Extraction:\", data);\r\n  console.log(\"[PlantAssignment] All Plants Data:\", allPlants);\r\n \r\n  const newClasses = data\r\n    .map((item) => {\r\n      const itemTitle = item.title.replace(/\\s+/g, \"\").replace(/plant/i, \"\");\r\n \r\n      const matchedPlant = allPlants.find((plant) => {\r\n        const plantTitle = plant.title\r\n          .replace(/\\s+/g, \"\")\r\n          .replace(/plant/i, \"\");\r\n        return plantTitle.toLowerCase() === itemTitle.toLowerCase();\r\n      });\r\n \r\n      return matchedPlant ? matchedPlant.id : null;\r\n    })\r\n    .filter((id) => id !== null);\r\n  // Remove null values (non-matching titles)\r\n \r\n  console.log(\"Extracted IDs (newClasses):\", newClasses);\r\n  return newClasses;\r\n};\r\n \r\nexport const handleRemoveData = async (\r\n  allPlants,\r\n  removedTitles,\r\n  productId,\r\n  type\r\n) => {\r\n  console.log(\"allPlants\", allPlants);\r\n  console.log(\"removedTitles\", removedTitles);\r\n  const rowstoDelete = extractIdsFromTitles(removedTitles, allPlants);\r\n  // console.log(\"newClasses handleRemoveData\",newClasses);\r\n \r\n  if (rowstoDelete.length > 0) {\r\n    let declassifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n    let classifybody = {\r\n      id: productId,\r\n      type: type,\r\n      classes: rowstoDelete,\r\n    };\r\n    const declassifyResponse = await fetchData(\r\n       \"POST\",\r\n      declassifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n  }\r\n};\r\n \r\n// Updated handleAddData function\r\nexport const handleAddData = async (\r\n  data,\r\n  allPlants,\r\n  objectId,\r\n  type,\r\n  proposedChanges,\r\n  productChilds,\r\n  hasMBOM\r\n) => {\r\n  console.log(\"Data Received for handleAddData:\", data);\r\n \r\n  // Step 1: Convert incoming data (titles) to class IDs\r\n  const newClasses = extractIdsFromTitles(data, allPlants);\r\n  console.log(\"newClasses before filtering:\", newClasses);\r\n  console.log(\"productChilds\", productChilds);\r\n \r\n  // Step 2: Filter productChilds that are released but not being modified\r\n  const NotPropagableChilds = productChilds.filter((prodChild) => {\r\n    if (prodChild.state.toLowerCase() === \"released\") {\r\n      const change = proposedChanges.find(\r\n        (change) =>\r\n          change.identifier === prodChild.id &&\r\n          change.action.toLowerCase() === \"modify\"\r\n      );\r\n      return !change;\r\n    }\r\n    return false;\r\n  });\r\n \r\n  console.log(\"NotPropagableChilds ARE:\", NotPropagableChilds);\r\n \r\n  // Step 3: Prepare Error Object\r\n  const ErrorObject = [];\r\n \r\n  newClasses.forEach((classId) => {\r\n    const missingIn = NotPropagableChilds.filter(\r\n      (child) => !child.classes.includes(classId)\r\n    )\r\n      .map((child) => child.name)\r\n      .join(\", \");\r\n \r\n    if (missingIn !== \"\" && missingIn !== \"Undefined\") {\r\n      ErrorObject.push({ ClassID: classId, Childs: missingIn });\r\n    }\r\n  });\r\n  console.log(\"error object savetable\", ErrorObject);\r\n \r\n  // Step 4: Generate Final Messages\r\n  let Finalmessage = \"\";\r\n  ErrorObject.forEach((item) => {\r\n    const classTitle = allPlants.find(\r\n      (plant) => plant.id === item.ClassID\r\n    )?.title;\r\n    const message = `Unable to classify product in ${classTitle} due to unclassified child items: ${item.Childs}`;\r\n    Finalmessage += `${message}\\n`;\r\n  });\r\n \r\n  console.log(\"Final Message:\\n\", Finalmessage);\r\n \r\n  // Step 5: Filter out newClasses that are present in ErrorObject\r\n  const filteredNewClasses = newClasses.filter(\r\n    (id) => !ErrorObject.some((item) => item.ClassID === id)\r\n  );\r\n  console.log(\r\n    \"Filtered New Classes (excluding errored ones):\",\r\n    filteredNewClasses\r\n  );\r\n \r\n  // Make the API call if newClasses is not empty\r\n  if (filteredNewClasses.length > 0) {\r\n    const classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n    const classifybody = {\r\n      id: objectId, // Use objectId from Redux\r\n      type: type, // Use type from Redux\r\n      classes: filteredNewClasses,\r\n      mode: \"classifyParent\",\r\n    };\r\n \r\n    console.log(\"Classify API Body:\", classifybody);\r\n \r\n    try {\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"Classify Response:\", JSON.stringify(classifyResponse));\r\n    } catch (error) {\r\n      console.error(\"Error in Classify API Call:\", error);\r\n    }\r\n  }\r\n\r\n  if (\r\n    filteredNewClasses.length > 0 &&\r\n    productChilds.length > 0 &&\r\n    type === \"VPMReference\" &&\r\n    hasMBOM\r\n  ) {\r\n    let classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n\r\n    let classifybody = {\r\n      id: objectId,\r\n      type: type,\r\n      classes: filteredNewClasses,\r\n      childs: productChilds,\r\n      mode: \"classifychilds\",\r\n    };\r\n    const childclassifyResponse = await fetchData(\r\n       \"POST\",\r\n      classifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\r\n      \"child classifyResponse:\",\r\n      JSON.stringify(childclassifyResponse)\r\n    );\r\n  }\r\n \r\n  return {\r\n    success: true,\r\n    message: \"Data saved successfully\",\r\n    ErrorObject: ErrorObject,\r\n    Finalmessage: Finalmessage,\r\n  };\r\n};\r\n \r\nexport const saveData = async (\r\n  updatedItems,\r\n  classesToBeClassified,\r\n  initialAssignedClasses,\r\n  headers,\r\n  productId,\r\n  AllClasses,\r\n  productChilds,\r\n  type,\r\n  rowstoDelete,\r\n  finalArray,\r\n  proposedChanges\r\n) => {\r\n  try {\r\n    const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n    console.log(\"[Save Data] Starting data saving process...\");\r\n    console.log(\"Type in Save Table Data:\", type);\r\n    console.log(\"Final aRRAY IS inside Save:\", finalArray);\r\n    console.log(\"Proposed Changes in Save\", proposedChanges);\r\n    const classifiedClasses = [...classesToBeClassified];\r\n    const WAFData = await loadWAFData();\r\n    const fetchOOTBData = async (url, body, method) => {\r\n      console.log(\"Fetching URL:\", url);\r\n      console.log(\"Request Body:\", JSON.stringify(body, null, 2));\r\n \r\n      return new Promise((resolve, reject) => {\r\n        WAFData.authenticatedRequest(url, {\r\n          method,\r\n          headers: {\r\n            ...headers,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: JSON.stringify(body),\r\n          type: \"json\",\r\n          onComplete: (response) => {\r\n            console.log(\"Response received:\", response);\r\n            resolve(response);\r\n          },\r\n          onFailure: (error) => {\r\n            console.error(\"Request failed:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    };\r\n \r\n \r\n \r\n    // released childs but not present in CA Proposed Changes\r\n    let NotPropagableChilds = productChilds.filter((prodChild) => {\r\n      console.log(\"Processing prodChild:\", prodChild);\r\n      if (prodChild.state.toLowerCase() === \"released\") {\r\n        console.log(\"Released prodChild:\", prodChild);\r\n        const change = proposedChanges.find(\r\n          (change) =>\r\n            change.identifier === prodChild.id &&\r\n            change.action.toLowerCase() === \"modify\"\r\n        );\r\n        console.log(\"Matching change for prodChild:\", change);\r\n        return !change;\r\n      }\r\n      console.log(\"prodChild state is not 'released':\", prodChild.state);\r\n      return false;\r\n    });\r\n    console.log(\"NotPropagableChilds ARE :\", NotPropagableChilds);\r\n \r\n    let ErrorObj = [];\r\n    finalArray.forEach((classItem) => {\r\n      //if (classItem.Type === \"New\" || classItem.Type === \"Update\" ) {\r\n      if (classItem.MBOMValue) {\r\n        let prodchilds = [];\r\n        NotPropagableChilds.forEach((notPropagableChild) => {\r\n          if (!notPropagableChild.classes.includes(classItem.id)) {\r\n            prodchilds.push({\r\n              childId: notPropagableChild.id,\r\n              childName: notPropagableChild.name,\r\n            });\r\n          }\r\n        });\r\n        if (prodchilds.length > 0) {\r\n          ErrorObj.push({\r\n            id: classItem.id,\r\n            title: classItem.title,\r\n            childs: prodchilds,\r\n            type: classItem.Type,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    let Finalmessage = \"\";\r\n    console.log(\"ErrorObj IS\", ErrorObj);\r\n    ErrorObj.forEach((item) => {\r\n      let message = \"\";\r\n \r\n      // Check if item.childs is an array and contains valid objects with titles\r\n      if (\r\n        Array.isArray(item.childs) &&\r\n        item.childs.every((child) => child.childName)\r\n      ) {\r\n        const childTitles = item.childs\r\n          .map((child) => child.childName)\r\n          .join(\", \");\r\n        console.log(\"Chilld Titles are\", childTitles);\r\n        if (item.type.toLowerCase() !== \"new\") {\r\n          message = `${item.title} MBOM can't be Make due to unclassified child items: ${childTitles}`;\r\n        } else {\r\n          message = `Unable to classify product ${item.title} due to unclassified child items: ${childTitles}`;\r\n        }\r\n        console.log(\"Message is:\", message);\r\n      } else {\r\n        // Handle case where childs is invalid or missing titles\r\n        message = `Invalid child data for ${item.title}.`;\r\n      }\r\n \r\n      //  item.message = message;\r\n      Finalmessage += `${message}\\n`; // Using '\\n' to separate each message with a new line\r\n    });\r\n    console.log(ErrorObj);\r\n    console.log(\"Concatenated Messages:\\n\", Finalmessage);\r\n \r\n    let newClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.Type.toLowerCase() === \"new\" &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n    console.log(\"New Classes are:\", newClasses);\r\n    let updateBody = {};\r\n    finalArray.forEach((classItem) => {\r\n      const isIdNotInErrorObj = !ErrorObj.some(\r\n        (errorItem) => errorItem.id === classItem.id\r\n      );\r\n      if (\r\n        isIdNotInErrorObj &&\r\n        (classItem.Type.toLowerCase() === \"update\" ||\r\n          (classItem.Type.toLowerCase() === \"new\" && classItem.MBOMValue))\r\n      ) {\r\n        updateBody[classItem.MBOMName] = classItem.MBOMValue;\r\n      }\r\n    });\r\n    console.log(\"Update body is:\", updateBody);\r\n \r\n    let propagateClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.MBOMValue &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n \r\n    console.log(\"Propogateable classes are\", propagateClasses);\r\n \r\n    if (newClasses.length > 0) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: newClasses,\r\n        mode: \"classifyParent\",\r\n      };\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"classifyResponse:\", JSON.stringify(classifyResponse));\r\n    }\r\n \r\n    if (Object.keys(updateBody).length > 0) {\r\n      const nextApiUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslib/dslib:ClassifiedItem/${productId}`;\r\n      const response = await fetchOOTBData(nextApiUrl, \"\", \"GET\");\r\n      console.log(\"CStamp Response:\", response);\r\n      let cestamp = response.member[0]?.cestamp || \"\";\r\n      updateBody[\"cestamp\"] = cestamp;\r\n \r\n      const patchUrl = `https://saasimplementationserverdev.azurewebsites.net/plantAssignment/updateClassificationAttribute?id=${productId}`;\r\n      await fetchData(\"PATCH\",patchUrl, updateBody, );\r\n      console.log(\"Updated database successfully.\");\r\n    }\r\n \r\n    if (\r\n      propagateClasses.length > 0 &&\r\n      productChilds.length > 0 &&\r\n      type === \"VPMReference\"\r\n    ) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: propagateClasses,\r\n        childs: productChilds,\r\n        mode: \"classifychilds\",\r\n      };\r\n      const childclassifyResponse = await fetchData(\r\n         \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\r\n        \"child classifyResponse:\",\r\n        JSON.stringify(childclassifyResponse)\r\n      );\r\n    }\r\n    if (rowstoDelete.length > 0) {\r\n      let declassifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: rowstoDelete,\r\n      };\r\n      const declassifyResponse = await fetchData(\r\n        \"POST\",\r\n        declassifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n    }\r\n \r\n    console.log(\"All classification API calls completed successfully.\");\r\n \r\n    return {\r\n      success: true,\r\n      message: \"Data saved successfully\",\r\n      ErrorObj: ErrorObj,\r\n      Finalmessage: Finalmessage,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error occurred:\", error);\r\n    return { success: false, message: \"Failed to save data\", error };\r\n  }\r\n};"],"names":["forwardRef","_ref","ref","fileTypes","multiple","onUpload","onReset","disabled","message","files","setFiles","useState","showErrorToast","useToast","useImperativeHandle","handleClearFiles","skipSuccessToast","arguments","length","undefined","handleClearFile","current","_jsxs","className","concat","children","_jsx","FileUploader","handleChange","selectedFiles","fileArray","name","types","hoverTitle","map","file","index","style","display","alignItems","onClick","background","border","cursor","color","opacity","show","onHide","title","footerButtons","Modal","size","centered","Header","closeButton","Title","Body","Footer","btn","Button","variant","label","data","columns","addedItem","CAName","state","showWarningToast","rowSelection","setRowSelection","useEffect","addPlant","selectedItems","table","getSelectedRowModel","rows","item","original","MSG_EMPTYADD_ERROR","enhancedColumns","useMemo","id","cell","_ref2","row","type","checked","getIsSelected","onChange","getToggleSelectedHandler","useReactTable","enableRowSelection","onRowSelectionChange","getCoreRowModel","_Fragment","getRowModel","forEach","toggleSelected","maxHeight","backgroundColor","flexRender","getVisibleCells","column","columnDef","getContext","accessorKey","WidgetLifecycle","handleDrop","useBOSDropableArea","showSuccessToast","loading","setLoading","console","log","window","widget","trace","addEvent","async","_latestDraggedData$da","_latestDraggedData$da2","Error","stack","split","userClickedRefresh","sessionStorage","getItem","some","line","includes","isAutoTriggeredRefresh","warn","removeItem","latestDraggedData","store","getState","droppedObject","droppedObjectData","initialDraggedData","items","error","refreshWidgetData","MSG_REFRESH_ERROR","MSG_REFRESH_SUCCESS","Loader","useDocumentCreationWidget","dispatch","useDispatch","ENOVIA_BASE_URL","process","email","getValue","handleDocumentCreationWidget","collabSpace","objectId","parentName","parentRevision","setParentDetailsLoading","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","baseURL","parentDirection","urlObjWAF","ChildObject","callEnoviaWebService","status","output","_response$data","_response$data$data","_response$data2","_response$data2$data","requestBody","getUrl","ChildObjectDocument","sSpec","dataelements","trim","secondaryTitle","revision","stateNLS","revisionBody","child","body","identifier","source","relativePath","push","RevisionUrl","response","convertRevisionToNumber","rev","test","parseInt","number","i","charCodeAt","results","latestVersion","versions","reduce","latest","doc","version","_objectSpread","isLatestRevision","SpecName","SpecRevision","Items","obj","ItemName","ItemRevision","Specifications","fetchData","mergedData","spec","matchingDoc","find","childState","childTitle","childLatest","childName","childRevision","PrintOnPurchaseOrderRequired","PrintOnWorkOrderRequired","WorkOrderDocumentRequired","PrintOnReportOrderRequired","setDocumentCreationData","setSpecDocument","widgetType","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","setDroppedObjectData","cardData","draggedObjectData","_dataItems$","_dataItems$2","setIsDroppedAction","setDragObjectDetailsDocumentCreation","objectType","Name","MSG_FETCH_OBJECT_DETAILS_FAILED","_dataItems$3","validTypes","MSG_INVALID_DOCUMENT_CREATION_OBJECT_TYPE","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","useDocumentCreationDropableArea","performSearch","useInterComSearch","Image","width","height","src","alt","SearchInput","onSearch","searchText","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","formatDateToCustom","input","date","Date","localDate","toLocaleString","timeZone","pad","n","toString","padStart","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","getTableData","tableData","_data$dataelements","_data$dataelements2","_data$dataelements3","_data$dataelements4","_data$dataelements5","_data$dataelements6","_data$dataelements7","_data$dataelements8","_data$dataelements9","_data$dataelements10","Revision","State","TypeNLS","typeNLS","Originated","originated","Modified","modified","IsLatestRevision","validateFile","collabSpaceTitles","selectedOperation","Promise","resolve","reject","_config$DocumentCreat","_config$DocumentCreat2","operation","fileName","matchedOperation","expectedHeaders","config","fileHeaders","mandatoryAttributes","errors","Array","isArray","reader","FileReader","readAsBinaryString","onload","workbook","XLSX","e","target","result","dense","cellDates","cellNF","cellText","sheetName","SheetNames","worksheet","Sheets","uploadedHeaders","sheet_to_json","header","every","isTemplateMismatch","allSheetData","defval","chunks","chunkSize","slice","processDataInChunks","validationErrors","invalidPrefixes","errorStats","mandatory","einPrefix","docPrefix","lowerCaseCollabSpaceTitles","toLowerCase","chunkIndex","chunk","progress","Math","round","indexInChunk","globalRowIndex","field","_row$CollaborativeSp","userCollabSpace","valueToValidate","columnName","_row$columnName","prefix","startsWith","processedRows","totalRows","currentErrors","collaborativeSpace","documentPrefix","total","byType","sheetData","onerror","onSave","setType","fileUploaderRef","useRef","collabTitles","setCollabTitles","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","columnHeaders","setColumnHeaders","setMandatoryAttributes","formattedData","setFormattedData","errorModalShow","setErrorModalShow","typeDropDownData","setTypeDropDownData","val","handleReset","CustomModal","value","FileUpload","validationResult","originalData","errorResponse","responseErrors","responseHeaders","responseMandatoryAttributes","selectedRows","latestRevision","droppedRevision","documentCreationData","showDropdown","setShowDropdown","isShowPopup","setIsShowPopup","DocumentCreationModal","handleClosePopup","DocumentCreationWidget","tableKey","setTableKey","setTableData","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","specData","setSpecData","selectableRows","setSelectableRows","selectedTableRows","useSelector","loadingParentDetails","proposedChanges","plantObjectData","isDropped","bosData","BOSObjectData","bosSpecDocument","specDocument","_state$droppedObject$","dropObjectDetailsData","_state$droppedObject$2","dropObjectDetails","showDetailPageDocumentCreation","_state$droppedObject$3","showDetailPage","prevKey","_droppedObjectData$in","_droppedObjectData$in2","newTableData","Type","owner","Owner","Description","imageURL","EIN","getCardData","columnKey","setDocumentCreationShowDetailPage","optimizedTableData","filteredData","filter","_item$dataelements","_item$dataelements$ti","_dropObjectDetailsDat","_dropObjectDetailsDat2","itemTitle","objEIN","objTitle","DragAndDropComponent","handleHomeClick","setIsDropped","parentDetails","setPlantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CardWithDragAndDrop","DocumentCreationToolbarCta","formatedFileData","_response","then","res","catch","statusCode","MSG_SAVE_SUCCESS","errorMessage","ReusableTable","showActionButtons","onSelectableRowsChange","setDocumentCreationHideDetailPage","root","hasOnLoadRun","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","render","Provider","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener","extractIdsFromTitles","newClasses","replace","matchedPlant","plant","handleRemoveData","removedTitles","productId","rowstoDelete","declassifyUrl","classifybody","classes","declassifyResponse","JSON","stringify","handleAddData","productChilds","hasMBOM","NotPropagableChilds","prodChild","change","action","ErrorObject","classId","missingIn","join","ClassID","Childs","Finalmessage","_allPlants$find","classTitle","filteredNewClasses","classifyUrl","classifyResponse","childs","childclassifyResponse","saveData","updatedItems","classesToBeClassified","initialAssignedClasses","AllClasses","finalArray","WAFData","loadWAFData","fetchOOTBData","url","method","authenticatedRequest","onComplete","onFailure","ErrorObj","classItem","MBOMValue","prodchilds","notPropagableChild","childId","childTitles","errorItem","updateBody","MBOMName","propagateClasses","Object","keys","_response$member$","nextApiUrl","cestamp","member","patchUrl"],"sourceRoot":""}