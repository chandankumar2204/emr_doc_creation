{"version":3,"file":"static/js/22.6bc2e6cd.chunk.js","mappings":"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","sources":["components/Modal/customModal.jsx","components/Popup/Popup.jsx","hooks/useDocumentCreationWidget.js","hooks/useDocumentCreationDropableArea.js","pages/DocumentCreation/DragAndDrop.jsx","pages/DocumentCreation/DocumentCreationHelpers.js","components/Modals/DocumentCreationModal.jsx","pages/DocumentCreation/DocumentCreationWidgetToolbarCta.jsx","pages/DocumentCreation/DocumentCreationWidget.jsx","pages/DocumentCreation/documentCreationIndex.js","services/api/PlantAssignment/saveTableDataService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport {\r\n  useReactTable,\r\n  getCoreRowModel,\r\n  flexRender,\r\n} from \"@tanstack/react-table\";\r\nimport \"./Popup.css\";\r\nimport {\r\n  MSG_ADDPRODUCT_NOT_ALLOWED_ERROR,\r\n  MSG_ADDPRODUCT_RELEASED_ERROR,\r\n  MSG_EMPTYADD_ERROR,\r\n} from \"../../utils/toastMessages\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\nconst AvailablePlant = forwardRef(\r\n  ({ data, columns, addedItem, CAName, state }, ref) => {\r\n    const { showWarningToast } = useToast();\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    useEffect(() => {\r\n      setRowSelection({}); // Reset selection when data changes\r\n    }, [data]);\r\n\r\n    const addPlant = () => {\r\n      const selectedRows = table.getSelectedRowModel().rows;\r\n      const selectedItems = selectedRows.map(\r\n        (item) => item.original[\"Available Plant\"]\r\n      );\r\n\r\n      if (selectedItems.length === 0) {\r\n        showWarningToast(MSG_EMPTYADD_ERROR);\r\n        return;\r\n      }\r\n\r\n      addedItem(selectedItems); // Send selected items to parent\r\n      setRowSelection({}); // Reset selection\r\n    };\r\n\r\n    // Expose the addPlant function to parent\r\n    useImperativeHandle(ref, () => ({\r\n      addPlant,\r\n    }));\r\n\r\n    const enhancedColumns = useMemo(() => {\r\n      const selectionColumn = {\r\n        id: \"select\",\r\n        cell: ({ row }) => (\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            checked={row.getIsSelected()}\r\n            onChange={row.getToggleSelectedHandler()}\r\n          />\r\n        ),\r\n      };\r\n      return [selectionColumn, ...columns];\r\n    }, [columns]);\r\n\r\n    const table = useReactTable({\r\n      data,\r\n      columns: enhancedColumns,\r\n      state: { rowSelection },\r\n      enableRowSelection: true,\r\n      onRowSelectionChange: setRowSelection,\r\n      getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary me-3\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(true));\r\n            }}\r\n          >\r\n            Select All\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => {\r\n              table\r\n                .getRowModel()\r\n                .rows.forEach((row) => row.toggleSelected(false));\r\n            }}\r\n          >\r\n            Deselect All\r\n          </button>\r\n        </div>\r\n\r\n        {table.getRowModel().rows.length > 0 ? (\r\n          <div className=\"overflow-auto\" style={{ maxHeight: \"60vh\" }}>\r\n            {table.getRowModel().rows.map((row) => (\r\n              <div\r\n                key={row.id}\r\n                className=\"p-3 border-bottom d-flex align-items-center\"\r\n                style={{\r\n                  backgroundColor: row.getIsSelected() ? \"#d5e8f2\" : \"inherit\",\r\n                }}\r\n              >\r\n                <div className=\"me-3\">\r\n                  {flexRender(\r\n                    row.getVisibleCells()[0].column.columnDef.cell,\r\n                    row.getVisibleCells()[0].getContext()\r\n                  )}\r\n                </div>\r\n                <div>{row.original[columns[0].accessorKey]}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-muted p-3\">No data available</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AvailablePlant;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setParentDetailsLoading,\r\n  setSpecDocument,\r\n  setDocumentCreationData\r\n} from \"../store/droppedObjectSlice\";\r\nimport { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../utils/toastMessages\";\r\nimport useToast from \"./useToast\";\r\nimport { fetchCsrfToken } from \"../services/api/PlantAssignment/fetchCsrfService\";\r\nimport { initWidget } from \"../lib/widget\";\r\nimport { callEnoviaWebService, loadWAFData, fetchData } from \"../utils/helpers\";\r\n\r\nconst useDocumentCreationWidget = () => {\r\n  const { showErrorToast } = useToast();\r\n  const dispatch = useDispatch();\r\n  const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n  let email = window.widget.getValue(\"email\");\r\n\r\n  console.log(\"Email in usedocumentCreationWidget:\", email);\r\n  // console.log(\"Security context using preferences are\", securitycontext);\r\n\r\n  const handleDocumentCreationWidget = async (\r\n    collabSpace,\r\n    state,\r\n    objectId,\r\n    type,\r\n    parentName,\r\n    parentRevision\r\n  ) => {\r\n    try {\r\n      console.log(\"Object id is:\", objectId);\r\n      console.log(\"Object type is:\", type);\r\n      dispatch(setParentDetailsLoading(true));\r\n\r\n      const headers = await fetchCsrfToken();\r\n      if (!headers) {\r\n        showErrorToast(MSG_FETCH_CSRF_HEADERS_FAILED);\r\n        return;\r\n      }\r\n\r\n      console.log(\"[useBOSWidget] CSRF Headers:\", headers);\r\n\r\n      // Step 1: Call Enovia Web Service\r\n      let baseURL = `${ENOVIA_BASE_URL}/resources/v1/modeler/documents/parentId/${objectId}?parentRelName=SpecificationDocument`;\r\n\r\n      let parentDirection = type === \"Document\" ? \"to\" : \"from\";\r\n\r\n      let urlObjWAF = `${baseURL}&parentDirection=${parentDirection}`;\r\n      let ChildObject = await callEnoviaWebService(\r\n        \"GET\",\r\n        urlObjWAF,\r\n        \"\",\r\n        headers\r\n      );\r\n      console.log(\"SpecDetails Response: document creation\", ChildObject);\r\n\r\n      if (\r\n        ChildObject &&\r\n        ChildObject.status &&\r\n        ChildObject.output.data.length > 0\r\n      ) {\r\n        let ChildObjectDocument = ChildObject.output.data.map((sSpec) => ({\r\n          id: sSpec.id,\r\n          title:\r\n            sSpec.dataelements.title && sSpec.dataelements.title.trim() !== \"\"\r\n              ? sSpec.dataelements.title\r\n              : sSpec.dataelements.secondaryTitle,\r\n          revision: sSpec.dataelements.revision,\r\n          state: sSpec.dataelements.stateNLS,\r\n          name: sSpec.dataelements.name,\r\n        }));\r\n\r\n        console.log(\r\n          \"[useBOSWidget] Extracted Spec Documents:\",\r\n          ChildObjectDocument\r\n        );\r\n        // if type is Document and then iterate ovet the\r\n        if (type === \"Document\") {\r\n          const revisionBody = {\r\n            data: [],\r\n          };\r\n          ChildObjectDocument.forEach((child) => {\r\n            const body = {\r\n              id: child.id,\r\n              identifier: child.id,\r\n              type: \"VPMReference\",\r\n              source: `${ENOVIA_BASE_URL}`,\r\n              relativePath: `/resources/v1/modeler/dseng/dseng:EngItem/${child.id}`,\r\n            };\r\n            revisionBody.data.push(body);\r\n          });\r\n          const RevisionUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslc/version/getGraph`;\r\n          const response = await callEnoviaWebService(\r\n            \"POST\",\r\n            RevisionUrl,\r\n            revisionBody,\r\n            headers\r\n          );\r\n          console.log(\"response is:\", response);\r\n          response.output.results.forEach((item) => {\r\n            // Find the latest version based on the 'revision' key\r\n            const latestVersion = item.versions.reduce((latest, current) => {\r\n              return convertRevisionToNumber(current.revision) >\r\n                convertRevisionToNumber(latest.revision)\r\n                ? current\r\n                : latest;\r\n            });\r\n\r\n            // Update 'isLatestRevision' for only the matching document\r\n            ChildObjectDocument = ChildObjectDocument.map((doc) => {\r\n              if (item.versions.some((version) => version.id === doc.id)) {\r\n                return {\r\n                  ...doc,\r\n                  isLatestRevision:\r\n                    doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n                };\r\n              }\r\n              return doc;\r\n            });\r\n          });\r\n\r\n          // Function to convert revision to a comparable numeric value\r\n          function convertRevisionToNumber(rev) {\r\n            if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n            let number = 0;\r\n            for (let i = 0; i < rev.length; i++) {\r\n              number =\r\n                number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n            }\r\n            return number; // Handles A-Z, AA-ZZ revisions\r\n          }\r\n\r\n          console.log(\"ChildObjectDocument is:\", ChildObjectDocument);\r\n        }\r\n        let requestBody;\r\n        let getUrl;\r\n        if (type === \"Document\") {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestSpecItemDetails\";\r\n          requestBody = {\r\n            SpecName: parentName, // Replace with actual SpecName if dynamic\r\n            SpecRevision: parentRevision, // Replace with actual SpecRevision if dynamic\r\n            Items: ChildObjectDocument.map((obj) => ({\r\n              ItemName: obj.name, // Replace dynamically if needed\r\n              ItemRevision: obj.revision,\r\n            })),\r\n          };\r\n        } else {\r\n          getUrl =\r\n            \"https://saasimplementationserverdev.azurewebsites.net/bosAttribute/getLatestItemSpecDetails\";\r\n          requestBody = {\r\n            ItemName: parentName, // Replace with actual ItemName if dynamic\r\n            ItemRevision: parentRevision, // Replace with actual revision if dynamic\r\n            Specifications: ChildObjectDocument.map((obj) => ({\r\n              SpecName: obj.name,\r\n              SpecRevision: obj.revision,\r\n            })),\r\n          };\r\n        }\r\n\r\n        console.log(\"Requested Body is:\", requestBody);\r\n\r\n        const response = await fetchData(\"POST\", getUrl, requestBody);\r\n\r\n        console.log(\"the response from node API is:\", response);\r\n\r\n        let mergedData = [];\r\n        if (response?.data?.data?.Specifications) {\r\n          // **Case 1: API Response Contains \"Specifications\"**\r\n          response.data.data.Specifications.forEach((spec) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (obj) =>\r\n                obj.name === spec.SpecName && obj.revision === spec.SpecRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              childName: spec.SpecName,\r\n              childRevision: spec.SpecRevision,\r\n              PrintOnPurchaseOrderRequired: spec.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: spec.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: spec.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: spec.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": spec[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else if (response?.data?.data?.Items) {\r\n          // get all the id's\r\n\r\n          // **Case 2: API Response Contains \"Items\"**\r\n          response.data.data.Items.forEach((item) => {\r\n            let matchingDoc = ChildObjectDocument.find(\r\n              (doc) =>\r\n                doc.name === item.ItemName && doc.revision === item.ItemRevision\r\n            );\r\n\r\n            mergedData.push({\r\n              childState: matchingDoc?.state || \"\",\r\n              childTitle: matchingDoc?.title || \"\",\r\n              childName: item.ItemName,\r\n              childRevision: item.ItemRevision,\r\n              childLatest: matchingDoc?.isLatestRevision || \"FALSE\",\r\n              PrintOnPurchaseOrderRequired: item.PrintOnPurchaseOrderRequired,\r\n              PrintOnWorkOrderRequired: item.PrintOnWorkOrderRequired,\r\n              WorkOrderDocumentRequired: item.WorkOrderDocumentRequired,\r\n              PrintOnReportOrderRequired: item.PrintOnReportOrderRequired,\r\n              \"SAP/JDE\": item[\"SAP/JDE\"],\r\n            });\r\n          });\r\n        } else {\r\n          console.warn(\"[useBOSWidget] Unexpected API response format.\");\r\n        }\r\n        console.log(\r\n          \"[useBOSWidget] Final Merged Data for Dispatch:\",\r\n          mergedData\r\n        );\r\n        dispatch(setDocumentCreationData(ChildObject.output.data));\r\n        dispatch(setSpecDocument(mergedData));\r\n        // You can now dispatch or return this data as needed\r\n      } else {\r\n        console.warn(\"[useDocumentCreationWidget] No connected childs.\");\r\n        dispatch(setSpecDocument([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[useDocumentCreationWidget] Error:\", error);\r\n      throw error; // Let the caller handle the error\r\n    } finally {\r\n      dispatch(setParentDetailsLoading(false)); // Ensure loading state is reset\r\n    }\r\n  };\r\n\r\n  return { handleDocumentCreationWidget };\r\n};\r\n\r\nexport default useDocumentCreationWidget;\r\n\r\n// response.output.results.forEach((item) => {\r\n//   // Find the latest version based on the 'revision' key\r\n//   const latestVersion = item.versions.reduce((latest, current) => {\r\n//     return convertRevisionToNumber(current.revision) > convertRevisionToNumber(latest.revision)\r\n//       ? current\r\n//       : latest;\r\n//   });\r\n\r\n//   // Update 'isLatestRevision' for each document\r\n//   ChildObjectDocument = ChildObjectDocument.map((doc) => ({\r\n//     ...doc,\r\n//     isLatestRevision: doc.id === latestVersion.id ? \"TRUE\" : \"FALSE\",\r\n//   }));\r\n// });\r\n\r\n// // Function to convert revision to a comparable numeric value\r\n// function convertRevisionToNumber(rev) {\r\n//   if (/^\\d+$/.test(rev)) return parseInt(rev, 10); // Handle numeric revisions (1,2,3)\r\n\r\n//   let number = 0;\r\n//   for (let i = 0; i < rev.length; i++) {\r\n//     number = number * 26 + (rev.charCodeAt(i) - \"A\".charCodeAt(0) + 1);\r\n//   }\r\n//   return number; // Handles A-Z, AA-ZZ revisions\r\n// }\r\n","import { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDragObjectDetailsDocumentCreation, setDroppedObjectData } from \"../store/droppedObjectSlice\";\r\nimport { setIsDropped as setIsDroppedAction } from \"../store/droppedObjectSlice\";\r\n// Custom hook\r\n// Reusable services\r\nimport {\r\n  initializeDroppableArea as initDroppable,\r\n  getDroppedObjectDetails,\r\n} from \"../services/api/droppableService\";\r\nimport useToast from \"../hooks/useToast\";\r\nimport {\r\n  MSG_FETCH_OBJECT_DETAILS_FAILED,\r\n  MSG_INVALID_OBJECT_TYPE,\r\n  MSG_UNEXPECTED_ERROR,\r\n} from \"../utils/toastMessages\";\r\nimport useDocumentCreationWidget from \"./useDocumentCreationWidget\";\r\n\r\nconst useDocumentCreationDropableArea = () => {\r\n  const { showErrorToast } = useToast();\r\n  const { handleDocumentCreationWidget } = useDocumentCreationWidget();\r\n\r\n  // const [csrfHeaders, setCsrfHeaders] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchObjectDetails = useCallback(\r\n    async (dataItems) => {\r\n      try {\r\n        const objectDetailsResult = await getDroppedObjectDetails({\r\n          dataItems,\r\n        });\r\n\r\n        // const cardownerResult = await fetchCardOwnerDetailsService({\r\n        //   dataItems,\r\n        //   headers,\r\n        // });\r\n\r\n        if (objectDetailsResult.success) {\r\n          // Merge the data from both services\r\n          // const combineData = {\r\n          //   cardData: objectDetailsResult.data.cardData,\r\n          //   ownerData: cardownerResult.data.ownerData,\r\n          // };\r\n\r\n          dispatch(\r\n            setDroppedObjectData({\r\n              cardData: objectDetailsResult.data.cardData,\r\n            })\r\n          );\r\n\r\n          const draggedObjectData = objectDetailsResult.data.cardData;\r\n          console.log(\"[Dragged Items are]\", draggedObjectData);\r\n\r\n          dispatch(setIsDroppedAction(true));\r\n          dispatch(setDragObjectDetailsDocumentCreation(draggedObjectData));\r\n\r\n          // call usePlantAssignment after successfully fetching object details\r\n          if (objectDetailsResult) {\r\n            await handleDocumentCreationWidget(\r\n              draggedObjectData[\"Collaborative Space\"],\r\n              draggedObjectData[\"Maturity State\"],\r\n              dataItems[0]?.objectId,\r\n              dataItems[0]?.objectType,\r\n              draggedObjectData.Name,\r\n              draggedObjectData[\"Dropped Revision\"]\r\n            );\r\n          }\r\n\r\n        } else {\r\n          showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"[FetchObjectDetails] Error fetching details:\", error);\r\n        showErrorToast(MSG_FETCH_OBJECT_DETAILS_FAILED);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [dispatch, handleDocumentCreationWidget]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    async (dataItems) => {\r\n      setLoading(true); // Start loading state\r\n      console.log(\"[handleDrop] document creation handleDrop called with dataItems:\", dataItems);\r\n      try {\r\n        if (dataItems && dataItems.length > 0) {\r\n          // Validate object type\r\n          const objectType = dataItems[0]?.objectType;\r\n          const validTypes = [\"VPMReference\"];\r\n          if (!validTypes.includes(objectType)) {\r\n            showErrorToast(MSG_INVALID_OBJECT_TYPE);\r\n            return;\r\n          }\r\n          dispatch(setIsDroppedAction(true));\r\n          await fetchObjectDetails(dataItems);\r\n        } else {\r\n          console.warn(\"[handleDrop] No data items to process.\");\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"[Drop] Error in handleDrop:\", error);\r\n        console.log(\r\n          \"[handleDrop] Error in handleDrop, setting loading to false\"\r\n        );\r\n        showErrorToast(MSG_UNEXPECTED_ERROR);\r\n      }\r\n    },\r\n    [fetchObjectDetails, showErrorToast]\r\n  );\r\n  // Initialize droppable area\r\n  const initializeDroppableArea = useCallback(() => {\r\n    dispatch(setIsDroppedAction(false));\r\n    const interval = setInterval(() => {\r\n      const droppableContainer = document.querySelector(\".droppable-container\");\r\n      if (droppableContainer) {\r\n        clearInterval(interval);\r\n        initDroppable(droppableContainer, handleDrop, dispatch, showErrorToast);\r\n      }\r\n    }, 100); // Check every 100ms\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [handleDrop, dispatch]);\r\n\r\n  return {\r\n    initializeDroppableArea,\r\n    loading,\r\n    handleDrop,\r\n  };\r\n};\r\n\r\nexport default useDocumentCreationDropableArea;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../components/DragAndDrop/DragAndDrop.css\"; // Import styles for the component\r\nimport { Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\n// import usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DragAndDropComponent = ({ type }) => {\r\n  const { handleDrop } = useDocumentCreationDropableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"90px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div>\r\n        <SearchInput onSearch={handleSearch} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDocumentCreationShowDetailPage } from \"../../store/droppedObjectSlice\";\r\nimport store from \"../../store/index\";\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n\r\n  let cardData = {\r\n    title: item.Title || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nfunction formatDateToCustom(input) {\r\n  const date = new Date(input);\r\n  const options = { timeZone: 'Asia/Kolkata' };\r\n  const localDate = new Date(date.toLocaleString('en-US', options));\r\n  const pad = (n) => n.toString().padStart(2, '0');\r\n  const month = pad(localDate.getMonth() + 1);\r\n  const day = pad(localDate.getDate());\r\n  const year = localDate.getFullYear();\r\n  let hours = localDate.getHours();\r\n  const minutes = pad(localDate.getMinutes());\r\n  const seconds = pad(localDate.getSeconds());\r\n  const ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12 || 12;\r\n  return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\r\n}\r\nexport const getTableData = (tableData, type) => {\r\n  console.log(\"tableData from frunction getTableData\", tableData);\r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    let rowData = {\r\n      Name: data?.dataelements?.name || \"N/A\",\r\n      Title: data?.dataelements?.title || \"N/A\",\r\n      Revision: data?.dataelements?.revision || \"1\",\r\n      State: data?.dataelements?.state || \"N/A\",\r\n      TypeNLS: data?.dataelements?.typeNLS || \"N/A\",\r\n      // CollabSpaceTitle: data?.dataelements?.collabSpaceTitle || \"N/A\",\r\n      Originated: data?.dataelements?.originated && formatDateToCustom(data?.dataelements?.originated) || \"N/A\",\r\n      Modified: data?.dataelements?.modified && formatDateToCustom(data?.dataelements?.modified) || \"N/A\",\r\n      IsLatestRevision: data?.dataelements?.isLatestRevision || \"N/A\",\r\n    };\r\n\r\n    // Add \"IsLatest\" key only if type === \"Document\"\r\n    // if (type === \"Document\") {\r\n    //   rowData.IsLatest = data?.childLatest || \"FALSE\";\r\n    // }\r\n\r\n    return rowData;\r\n  });\r\n};\r\n\r\nexport const tableColumns = (type, latestRevision, droppedRevision) => {\r\n\r\n  const editableColumns = [\r\n    \"Title\",\r\n  ].map((columnKey) => ({\r\n    accessorKey: columnKey,\r\n    header: columnKey,\r\n    cell: ({ row, getValue, table }) => {\r\n      // Determine if the cell should be editable\r\n      const handleCellClick = (e) => {\r\n        store.dispatch(setDocumentCreationShowDetailPage());\r\n        console.log(\"handleCellClick\", row, getValue());\r\n      };\r\n\r\n      return <span className=\"hyperlink-title-cell\" onClick={handleCellClick}>{getValue()}</span>\r\n    },\r\n  }));\r\n\r\n  const baseColumns = [\r\n    // { accessorKey: \"Title\", header: \"Title\" },\r\n    { accessorKey: \"Name\", header: \"Name\" },\r\n    // { accessorKey: \"CollabSpaceTitle\", header: \"collabspacetitle\" },\r\n    { accessorKey: \"Revision\", header: \"Revision\" },\r\n    { accessorKey: \"IsLatestRevision\", header: \"IsLatestRevision\" },\r\n    { accessorKey: \"Modified\", header: \"Modified\" },\r\n    { accessorKey: \"State\", header: \"State\" },\r\n    { accessorKey: \"TypeNLS\", header: \"Type\" },\r\n    { accessorKey: \"Originated\", header: \"Originated\" },\r\n  ];\r\n\r\n  return [...editableColumns, ...baseColumns];\r\n};","// DocumentCreationModal.jsx\r\nimport React, { useState } from \"react\";\r\nimport CustomModal from \"../Modal/customModal\";\r\n\r\nconst DocumentCreationModal = ({ show, onHide, onSave }) => {\r\n\r\n    const [type, setType] = useState(\"Document\");\r\n\r\n    const [typeDropDownData, setTypeDropDownData] = useState([\r\n        {\r\n            label: \"Document\",\r\n            val: \"Document\",\r\n        }\r\n    ])\r\n\r\n    const handleCreateDocument = () => {\r\n        onSave(type);\r\n        onHide();\r\n    }\r\n\r\n    return (\r\n        <CustomModal\r\n            show={show}\r\n            onHide={onHide}\r\n            title=\"New Document\"\r\n            footerButtons={[\r\n                {\r\n                    label: \"Create\",\r\n                    variant: \"primary\",\r\n                    onClick: () => {\r\n                        handleCreateDocument();\r\n                    },\r\n                },\r\n                {\r\n                    label: \"Close\",\r\n                    variant: \"secondary\",\r\n                    onClick: onHide,\r\n                },\r\n            ]}\r\n        >\r\n            <div className=\"row col-12\">\r\n                <div className=\"col-3\">\r\n                    <label>Type</label>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <select\r\n                        className=\"form-select mb-2\"\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        value={type}\r\n                    >\r\n                        <option value=\"\">-- Select Column --</option>\r\n                        {typeDropDownData.map((item) => (\r\n                            <option key={item?.val} value={item?.val}>\r\n                                {item?.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n                <div className=\"col-3\">\r\n                    <label>Select File</label>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <input type=\"file\" id=\"formFile\" class=\"form-control\"></input>\r\n                </div>\r\n            </div>\r\n\r\n        </CustomModal>\r\n    );\r\n};\r\n\r\nexport default DocumentCreationModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport Popup from \"../../components/Popup/Popup\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { MSG_BOS_SAVE } from \"../../utils/toastMessages\";\r\nimport MassUpdateDropdown from \"./MassUpdateDropdown\";\r\nimport DocumentCreationModal from \"../../components/Modals/DocumentCreationModal\";\r\n\r\nconst DocumentCreationToolbarCta = ({\r\n  onSave,\r\n  state,\r\n  selectedRows,\r\n  tableData,\r\n  // onMassUpdate,\r\n  type,\r\n  latestRevision,\r\n  droppedRevision,\r\n  documentCreationData,\r\n  cardData\r\n}) => {\r\n  const { showWarningToast } = useToast();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const [isShowPopup, setIsShowPopup] = useState(false);\r\n\r\n  const handleShowPopup = () => {\r\n    setIsShowPopup(true);\r\n  }\r\n  const handleClosePopup = () => {\r\n    setIsShowPopup(false);\r\n  }\r\n\r\n\r\n  // const handleSaveClick = () => {\r\n  //   if (type !== \"Document\" && latestRevision !== droppedRevision) {\r\n  //     showWarningToast(MSG_BOS_SAVE);\r\n  //   } else {\r\n  //     onSave();\r\n  //   }\r\n  //   // When save button is clicked, call onSave passed as prop\r\n  //   // onSave is passed with tableData from parent\r\n  // };\r\n  // const handleMassUpdate = (column, value, scope) => {\r\n  //   if (scope === \"selected\") {\r\n  //     onMassUpdate(selectedRows, column, value);\r\n  //   } else {\r\n  //     onMassUpdate(tableData, column, value);\r\n  //   }\r\n  // };\r\n  // const editableColumns = [\r\n  //   \"Print On Purchase Order Required\",\r\n  //   \"Print On Work Order Required\",\r\n  //   \"Work Order Document Required\",\r\n  //   \"Print On report Order Required\",\r\n  //   \"SAP/JDE\",\r\n  // ];\r\n  // const [isDisable, setIsDisable] = useState(false);\r\n  // useEffect(() => {\r\n  //   if (!cardData || !documentCreationData || !Array.isArray(documentCreationData)) return;\r\n\r\n  //   const cardTitle = cardData?.title?.trim();\r\n  //   const cardEIN = cardData?.EIN?.trim();\r\n  //   const isMatched = documentCreationData?.some((item) => {\r\n  //     const itemTitle = item?.dataelements?.title?.trim();\r\n  //     const itemEIN = item?.dataelements?.EIN?.trim();\r\n\r\n  //     console.log(\"cardTitle\", cardTitle, itemTitle, cardTitle == itemTitle, cardTitle === itemTitle)\r\n  //     console.log(\"cardTitle 1111\", cardTitle, itemTitle, cardTitle == itemTitle, cardTitle === itemTitle)\r\n  //     return (itemTitle && itemTitle === cardTitle) || (itemEIN && itemEIN === cardEIN);\r\n  //   });\r\n\r\n  //   console.log(\"Matching status:\", isMatched);\r\n  //   setIsDisable(isMatched);\r\n  // }, [cardData, documentCreationData]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <div className=\"d-flex\">\r\n        {/* <button\r\n          className=\"btn btn-outline-success btn-lg m-2\"\r\n          onClick={handleSaveClick}\r\n        >\r\n          Save\r\n        </button> */}\r\n        {\r\n          tableData.length > 0 ? <></> :\r\n            <button\r\n              className={`btn btn-outline-primary btn-lg m-2 ${tableData.length > 0 ? 'disabled' : ''}`}\r\n              disabled={tableData.length > 0 ? true : false}\r\n              onClick={() => {\r\n                //   type !== \"Document\" && latestRevision !== droppedRevision\r\n                //     ? showWarningToast(MSG_BOS_SAVE)\r\n                //     : setShowDropdown((prev) => !prev)\r\n                // }\r\n                // onSave();\r\n                handleShowPopup();\r\n              }\r\n              }\r\n            >\r\n              New Document\r\n            </button>\r\n        }\r\n      </div>\r\n      <DocumentCreationModal show={isShowPopup} onHide={handleClosePopup} onSave={onSave} />\r\n      {/* Dropdown appears below */}\r\n      {/* {showDropdown && (\r\n        <div className=\"mt-2\">\r\n          <MassUpdateDropdown\r\n            editableColumns={editableColumns}\r\n            selectedRows={selectedRows}\r\n            onApplyUpdate={handleMassUpdate}\r\n            valueOptions={[\"Yes\", \"No\"]}\r\n            onClose={() => setShowDropdown(false)}\r\n          />\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentCreationToolbarCta;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DragAndDropComponent from \"../../pages/DocumentCreation/DragAndDrop\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./DocumentCreationWidget.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ReusableTable from \"../../components/Table/Table\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport {\r\n  setDocumentCreationHideDetailPage,\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport { getCardData, getTableData, tableColumns } from \"./DocumentCreationHelpers\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport { saveData } from \"../../services/api/PlantAssignment/saveTableDataService\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport useBOSDropableArea from \"../../hooks/useBOSDropableArea\";\r\nimport DocumentCreationToolbarCta from \"../DocumentCreation/DocumentCreationWidgetToolbarCta\";\r\nimport { callEnoviaWebService, fetchData } from \"../../utils/helpers\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport useDocumentCreationWidget from \"../../hooks/useDocumentCreationWidget\";\r\nimport useDocumentCreationDropableArea from \"../../hooks/useDocumentCreationDropableArea\";\r\n\r\nconst DocumentCreationWidget = () => {\r\n  const { initializeDroppableArea, loading } = useDocumentCreationDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [specData, setSpecData] = useState([]);\r\n  const [selectableRows, setSelectableRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (specData.length) {\r\n  //     setTableData(specData.map((item) => ({ ...item, changedCells: {} })));\r\n  //   }\r\n  // }, [specData]);\r\n\r\n  const handleSave = async (type) => {\r\n    console.log(\"Table Data is:\", tableData);\r\n    setScreenLoader(true);\r\n    // console.log(\"Type of Parent:\", type);\r\n    // let parentData = [];\r\n    // let ChildNameKey;\r\n    // let ChildRevKey;\r\n    // let ChildStateKey;\r\n    // let ChildIdKey;\r\n    // if (type === \"Document\") {\r\n    //   parentData = {\r\n    //     SpecName: droppedObjectData.cardData.Name,\r\n    //     SpecRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     SpecState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     SpecID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK CARD DATA\r\n    //     // SpecState need to be added.\r\n    //   };\r\n    //   ChildNameKey = \"ItemName\";\r\n    //   ChildRevKey = \"ItemRevision\";\r\n    //   ChildStateKey = \"ItemState\";\r\n    //   ChildIdKey = \"ItemID\";\r\n    // } else {\r\n    //   console.log(\"It's a physical Product\");\r\n    //   parentData = {\r\n    //     ItemName: droppedObjectData.cardData.Name,\r\n    //     ItemRevision: droppedObjectData.cardData[\"Dropped Revision\"],\r\n    //     ItemState: droppedObjectData.cardData[\"Maturity State\"],\r\n    //     ItemID: droppedObjectData.cardData[\"ID\"], // NEED TO CHECK THIS\r\n    //     // need to add Maturity State as Item State and ItemId is Dropped Revision Id.\r\n    //   };\r\n    //   ChildNameKey = \"SpecName\";\r\n    //   ChildRevKey = \"SpecRevision\";\r\n    //   ChildStateKey = \"SpecState\";\r\n    //   ChildIdKey = \"SpecID\";\r\n    // }\r\n\r\n    const formattedData = {\r\n      \"data\": [\r\n        {\r\n          \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n          // \"type\": droppedObjectData.cardData['Type'],\r\n          \"type\": type,\r\n          \"dataelements\": {\r\n            \"name\": (cardData?.EIN != \"N/A\" && cardData?.EIN != \"\" && cardData?.EIN != undefined) ? cardData?.EIN : cardData?.title != \"N/A\" ? cardData?.title : \"\",\r\n            \"policy\": \"Document Release\",\r\n            \"state\": \"IN_WORK\",\r\n            \"title\": (cardData?.EIN != \"N/A\" && cardData?.EIN != \"\" && cardData?.EIN != undefined) ? cardData?.EIN : cardData?.title != \"N/A\" ? cardData?.title : \"\",\r\n            \"description\": cardData?.Description !== \"N/A\" ? cardData?.Description : \"\",\r\n            \"comments\": \"Test Document\",\r\n            \"collabspace\": \"Micro Motion\",\r\n            \"parentRelName\": \"SpecificationDocument\",\r\n            \"parentDirection\": \"from\",\r\n            \"extensions\": [\r\n              \"IPML.Automatic\"\r\n            ],\r\n          },\r\n          \"relateddata\": {\r\n            \"parents\": [\r\n              {\r\n                \"id\": droppedObjectData.cardData['Dropped Revision ID'],\r\n                \"type\": \"VPMRefrence\",\r\n                \"updateAction\": \"CONNECT\",\r\n                \"dataelements\": {\r\n                  \"parentRelName\": \"SpecificationDocument\"\r\n                },\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n\r\n    //   return {\r\n    //     [ChildNameKey]: matchingData ? matchingData.childName : null, // Use found childName\r\n    //     [ChildRevKey]: item.Revision, // Dynamic key based on type\r\n    //     [ChildStateKey]: matchingData ? matchingData.childState : null, // need to check this\r\n    //     [ChildIdKey]: matchingData ? matchingData.ID : null, //\r\n    //     // something needs to be done here\r\n    //     // [ChildStateKey]:\r\n    //     ...parentData, // Merge Parent Data\r\n    //     PrintOnPurchaseOrderRequired: item[\"Print On Purchase Order Required\"],\r\n    //     PrintOnWorkOrderRequired: item[\"Print On Work Order Required\"],\r\n    //     WorkOrderDocumentRequired: item[\"Work Order Document Required\"],\r\n    //     PrintOnReportOrderRequired: item[\"Print On report Order Required\"],\r\n    //     \"SAP/JDE\": item[\"SAP/JDE\"],\r\n    //   };\r\n    // });\r\n\r\n    // formattedData.sort((a, b) => {\r\n    //   if (a.SpecName !== b.SpecName) {\r\n    //     return a.SpecName.localeCompare(b.SpecName);\r\n    //   }\r\n    //   return Number(a.SpecRevision) - Number(b.SpecRevision);\r\n    // });\r\n    const headers = await fetchCsrfToken();\r\n    console.log(\"Formatted Data:\", formattedData, headers);\r\n    const saveURL =\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/documents\";\r\n    let response;\r\n    await callEnoviaWebService(\"POST\", saveURL, formattedData, headers).then((res) => {\r\n      response = res;\r\n      return response;\r\n    }).catch((error) => {\r\n      console.log(\"Error in catch\", error);\r\n      response = error;\r\n      return response;\r\n    });\r\n    console.log(\"the response from node API is:\", response);\r\n    console.log(\"the response from node API is:===output==\", response.output);\r\n    if (response.status === true && response.output.statusCode === 200) {\r\n      showSuccessToast(MSG_SAVE_SUCCESS);\r\n      console.log(\"response.output.data\", response.output.data);\r\n      setTableData(response.output.data);\r\n      // setSpecData(tableData);\r\n      setScreenLoader(false);\r\n    } else {\r\n      showErrorToast(response?.errorMessage);\r\n      setScreenLoader(false);\r\n    }\r\n  };\r\n\r\n  // const handleMassUpdate = async (data, column, value) => {\r\n  //   console.log(\"Data when the Mass Update is Clicked:\", data);\r\n  //   console.log(\"Columns to Change:\", column);\r\n  //   console.log(\"Value after change:\", value);\r\n\r\n  //   const updatedData = data.map((row) => ({\r\n  //     ...row,\r\n  //     [column]: value, // Update the specified column with the new value\r\n  //   }));\r\n\r\n  //   console.log(\"Updated Data is:\", updatedData);\r\n  //   console.log(\"Table Data is:\", tableData);\r\n\r\n  //   // Merge updatedData into tableData based on matching Title & Revision\r\n  //   const mergedData = tableData.map((row) => {\r\n  //     const updatedRow = updatedData.find(\r\n  //       (updated) =>\r\n  //         updated.Title === row.Title && updated.Revision === row.Revision\r\n  //     );\r\n\r\n  //     return updatedRow ? updatedRow : row; // Use updated row if found, else keep original row\r\n  //   });\r\n\r\n  //   console.log(\"Merged Data:\", mergedData);\r\n  //   updateTableData(mergedData);\r\n  // };\r\n\r\n  console.log(\"Table Data after Adding:\", tableData);\r\n  const selectedTableRows = useSelector(\r\n    (state) => state.droppedObject.selectedTableRows\r\n  );\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData\", droppedObjectData);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n  const proposedChanges = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.proposedChanges\r\n  );\r\n  console.log(\"Proposed Changes are:\", proposedChanges);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n  const bosData = useSelector((state) => state.droppedObject.BOSObjectData);\r\n\r\n  console.log(\"Bos data in BOS Widget is:\", bosData);\r\n  const bosSpecDocument = useSelector(\r\n    (state) => state.droppedObject.BOSObjectData.specDocument\r\n  );\r\n  console.log(\"BOSObjectData\", bosSpecDocument);\r\n\r\n  const documentCreationData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.data\r\n  );\r\n\r\n  const dropObjectDetailsData = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.dropObjectDetails\r\n  );\r\n\r\n  const showDetailPageDocumentCreation = useSelector(\r\n    (state) => state.droppedObject.documentCreationData?.showDetailPage\r\n  );\r\n  console.log(\"documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n  console.log(\"showDetailPageDocumentCreation\", showDetailPageDocumentCreation);\r\n\r\n  // const updateTableData = (updatedData) => {\r\n  //   const newDataWithChanges = updatedData.map((newItem) => {\r\n  //     const originalItem = specData.find(\r\n  //       (oldItem) =>\r\n  //         oldItem.Title === newItem.Title &&\r\n  //         oldItem.Revision === newItem.Revision\r\n  //     );\r\n\r\n  //     if (!originalItem) return { ...newItem, changedCells: {} };\r\n\r\n  //     // Track changed cells\r\n  //     const changedCells = {};\r\n  //     Object.keys(newItem).forEach((key) => {\r\n  //       if (newItem[key] !== originalItem[key]) {\r\n  //         changedCells[key] = true; // Mark this cell as changed\r\n  //       }\r\n  //     });\r\n\r\n  //     return { ...newItem, changedCells };\r\n  //   });\r\n\r\n  //   setTableData(newDataWithChanges);\r\n  // };\r\n\r\n  console.log(\"Table Data is:\", tableData);\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  const newTableData = useMemo(\r\n    () => getTableData(documentCreationData, type),\r\n    [documentCreationData, type]\r\n  );\r\n  useEffect(() => {\r\n    setSpecData(newTableData);\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n  const columns = useMemo(\r\n    () =>\r\n      tableColumns(\r\n        type,\r\n        droppedObjectData?.cardData[\"Latest Revision\"],\r\n        droppedObjectData?.cardData[\"Dropped Revision\"]\r\n      ),\r\n    [type, droppedObjectData?.cardData]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n      })\r\n    );\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n  };\r\n  const optimizedTableData = useMemo(() =>\r\n    getTableData(tableData, cardData), [tableData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect documentCreationData\", documentCreationData, dropObjectDetailsData);\r\n\r\n    // Filter based on the conditions\r\n    const filteredData = documentCreationData.filter((item) => {\r\n      const itemTitle = item?.dataelements?.title?.trim();\r\n      const objEIN = dropObjectDetailsData?.EIN?.trim();\r\n      const objTitle = dropObjectDetailsData?.Title?.trim();\r\n\r\n      if (objEIN) {\r\n        return itemTitle === objEIN;\r\n      } else {\r\n        return itemTitle === objTitle;\r\n      }\r\n    });\r\n    console.log(\"filteredData filteredData\", filteredData);\r\n\r\n    setTableData(filteredData);\r\n  }, [documentCreationData])\r\n\r\n  console.log(\"cardData\", cardData);\r\n  console.log(\"cardData11111=>type\", type);\r\n  console.log(\"cardData11111=>tableData\", tableData);\r\n  console.log(\"cardData11111=>optimizedTableData\", optimizedTableData);\r\n\r\n  return (\r\n    <>\r\n\r\n      {screenLoader && (\r\n        <div className=\"loading-overlay\">\r\n          <Loader />\r\n          <p>Saving...</p>\r\n        </div>\r\n      )}\r\n      {!isDropped && !loading && !isTableLoading && <DragAndDropComponent type=\"documentCreation\" />}\r\n      {loading && <Loader />}\r\n      {isDropped && (\r\n        <>\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {cardData && (\r\n                <CardWithDragAndDrop data={cardData} widgetType=\"documentCreationWidget\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"wrapper-cta\">\r\n                {\r\n                  showDetailPageDocumentCreation === false ?\r\n                    <>\r\n                      <DocumentCreationToolbarCta\r\n                        onSave={handleSave}\r\n                        type={type}\r\n                        latestRevision={\r\n                          droppedObjectData?.cardData[\"Latest Revision\"]\r\n                        }\r\n                        droppedRevision={\r\n                          droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                        }\r\n                        selectedRows={selectedTableRows}\r\n                        state={state}\r\n                        tableData={optimizedTableData}\r\n                        documentCreationData={documentCreationData}\r\n                        cardData={cardData}\r\n                      // onMassUpdate={handleMassUpdate}\r\n                      />\r\n                      <ReusableTable\r\n                        showActionButtons={false}\r\n                        key={tableKey}\r\n                        data={optimizedTableData}\r\n                        columns={columns}\r\n                        // meta={{ updateTableData }}\r\n                        type={type}\r\n                        // latestRevision={\r\n                        //   droppedObjectData?.cardData[\"Latest Revision\"]\r\n                        // }\r\n                        // droppedRevision={\r\n                        //   droppedObjectData?.cardData[\"Dropped Revision\"]\r\n                        // }\r\n                        widgetType=\"Doc_Creation_Widget\"\r\n                        onSelectableRowsChange={setSelectableRows}\r\n                      />\r\n                    </> :\r\n                    <div>\r\n                      Here Is Data\r\n                      <button className=\"btn btn-secondary\" onClick={() => { dispatch(setDocumentCreationHideDetailPage()); }}>Close</button>\r\n                    </div>\r\n\r\n                }\r\n\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DocumentCreationWidget;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\n// import WidgetLifecycle from \"./WidgetLifecycle\";\r\n// import BOSWidget from \"./BOSWidget\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport DocumentCreationWidget from \"./DocumentCreationWidget\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      {/* <WidgetLifecycle /> */}\r\n      <DocumentCreationWidget\r\n      />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\r\n      \"⚠️ [index.js] Unable to inject script—parent window not accessible.\"\r\n    );\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { fetchData, loadWAFData } from \"../../../utils/helpers\";\r\n \r\n// Function to extract IDs from titles\r\nconst extractIdsFromTitles = (data, allPlants) => {\r\n  console.log(\"Data Received for ID Extraction:\", data);\r\n  console.log(\"[PlantAssignment] All Plants Data:\", allPlants);\r\n \r\n  const newClasses = data\r\n    .map((item) => {\r\n      const itemTitle = item.title.replace(/\\s+/g, \"\").replace(/plant/i, \"\");\r\n \r\n      const matchedPlant = allPlants.find((plant) => {\r\n        const plantTitle = plant.title\r\n          .replace(/\\s+/g, \"\")\r\n          .replace(/plant/i, \"\");\r\n        return plantTitle.toLowerCase() === itemTitle.toLowerCase();\r\n      });\r\n \r\n      return matchedPlant ? matchedPlant.id : null;\r\n    })\r\n    .filter((id) => id !== null);\r\n  // Remove null values (non-matching titles)\r\n \r\n  console.log(\"Extracted IDs (newClasses):\", newClasses);\r\n  return newClasses;\r\n};\r\n \r\nexport const handleRemoveData = async (\r\n  allPlants,\r\n  removedTitles,\r\n  productId,\r\n  type\r\n) => {\r\n  console.log(\"allPlants\", allPlants);\r\n  console.log(\"removedTitles\", removedTitles);\r\n  const rowstoDelete = extractIdsFromTitles(removedTitles, allPlants);\r\n  // console.log(\"newClasses handleRemoveData\",newClasses);\r\n \r\n  if (rowstoDelete.length > 0) {\r\n    let declassifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n    let classifybody = {\r\n      id: productId,\r\n      type: type,\r\n      classes: rowstoDelete,\r\n    };\r\n    const declassifyResponse = await fetchData(\r\n       \"POST\",\r\n      declassifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n  }\r\n};\r\n \r\n// Updated handleAddData function\r\nexport const handleAddData = async (\r\n  data,\r\n  allPlants,\r\n  objectId,\r\n  type,\r\n  proposedChanges,\r\n  productChilds,\r\n  hasMBOM\r\n) => {\r\n  console.log(\"Data Received for handleAddData:\", data);\r\n \r\n  // Step 1: Convert incoming data (titles) to class IDs\r\n  const newClasses = extractIdsFromTitles(data, allPlants);\r\n  console.log(\"newClasses before filtering:\", newClasses);\r\n  console.log(\"productChilds\", productChilds);\r\n \r\n  // Step 2: Filter productChilds that are released but not being modified\r\n  const NotPropagableChilds = productChilds.filter((prodChild) => {\r\n    if (prodChild.state.toLowerCase() === \"released\") {\r\n      const change = proposedChanges.find(\r\n        (change) =>\r\n          change.identifier === prodChild.id &&\r\n          change.action.toLowerCase() === \"modify\"\r\n      );\r\n      return !change;\r\n    }\r\n    return false;\r\n  });\r\n \r\n  console.log(\"NotPropagableChilds ARE:\", NotPropagableChilds);\r\n \r\n  // Step 3: Prepare Error Object\r\n  const ErrorObject = [];\r\n \r\n  newClasses.forEach((classId) => {\r\n    const missingIn = NotPropagableChilds.filter(\r\n      (child) => !child.classes.includes(classId)\r\n    )\r\n      .map((child) => child.name)\r\n      .join(\", \");\r\n \r\n    if (missingIn !== \"\" && missingIn !== \"Undefined\") {\r\n      ErrorObject.push({ ClassID: classId, Childs: missingIn });\r\n    }\r\n  });\r\n  console.log(\"error object savetable\", ErrorObject);\r\n \r\n  // Step 4: Generate Final Messages\r\n  let Finalmessage = \"\";\r\n  ErrorObject.forEach((item) => {\r\n    const classTitle = allPlants.find(\r\n      (plant) => plant.id === item.ClassID\r\n    )?.title;\r\n    const message = `Unable to classify product in ${classTitle} due to unclassified child items: ${item.Childs}`;\r\n    Finalmessage += `${message}\\n`;\r\n  });\r\n \r\n  console.log(\"Final Message:\\n\", Finalmessage);\r\n \r\n  // Step 5: Filter out newClasses that are present in ErrorObject\r\n  const filteredNewClasses = newClasses.filter(\r\n    (id) => !ErrorObject.some((item) => item.ClassID === id)\r\n  );\r\n  console.log(\r\n    \"Filtered New Classes (excluding errored ones):\",\r\n    filteredNewClasses\r\n  );\r\n \r\n  // Make the API call if newClasses is not empty\r\n  if (filteredNewClasses.length > 0) {\r\n    const classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n    const classifybody = {\r\n      id: objectId, // Use objectId from Redux\r\n      type: type, // Use type from Redux\r\n      classes: filteredNewClasses,\r\n      mode: \"classifyParent\",\r\n    };\r\n \r\n    console.log(\"Classify API Body:\", classifybody);\r\n \r\n    try {\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"Classify Response:\", JSON.stringify(classifyResponse));\r\n    } catch (error) {\r\n      console.error(\"Error in Classify API Call:\", error);\r\n    }\r\n  }\r\n\r\n  if (\r\n    filteredNewClasses.length > 0 &&\r\n    productChilds.length > 0 &&\r\n    type === \"VPMReference\" &&\r\n    hasMBOM\r\n  ) {\r\n    let classifyUrl =\r\n      \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n\r\n    let classifybody = {\r\n      id: objectId,\r\n      type: type,\r\n      classes: filteredNewClasses,\r\n      childs: productChilds,\r\n      mode: \"classifychilds\",\r\n    };\r\n    const childclassifyResponse = await fetchData(\r\n       \"POST\",\r\n      classifyUrl,\r\n      classifybody,\r\n     \r\n    );\r\n    console.log(\r\n      \"child classifyResponse:\",\r\n      JSON.stringify(childclassifyResponse)\r\n    );\r\n  }\r\n \r\n  return {\r\n    success: true,\r\n    message: \"Data saved successfully\",\r\n    ErrorObject: ErrorObject,\r\n    Finalmessage: Finalmessage,\r\n  };\r\n};\r\n \r\nexport const saveData = async (\r\n  updatedItems,\r\n  classesToBeClassified,\r\n  initialAssignedClasses,\r\n  headers,\r\n  productId,\r\n  AllClasses,\r\n  productChilds,\r\n  type,\r\n  rowstoDelete,\r\n  finalArray,\r\n  proposedChanges\r\n) => {\r\n  try {\r\n    const ENOVIA_BASE_URL = process.env.REACT_APP_ENOVIA_BASE_URL;\r\n    console.log(\"[Save Data] Starting data saving process...\");\r\n    console.log(\"Type in Save Table Data:\", type);\r\n    console.log(\"Final aRRAY IS inside Save:\", finalArray);\r\n    console.log(\"Proposed Changes in Save\", proposedChanges);\r\n    const classifiedClasses = [...classesToBeClassified];\r\n    const WAFData = await loadWAFData();\r\n    const fetchOOTBData = async (url, body, method) => {\r\n      console.log(\"Fetching URL:\", url);\r\n      console.log(\"Request Body:\", JSON.stringify(body, null, 2));\r\n \r\n      return new Promise((resolve, reject) => {\r\n        WAFData.authenticatedRequest(url, {\r\n          method,\r\n          headers: {\r\n            ...headers,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: JSON.stringify(body),\r\n          type: \"json\",\r\n          onComplete: (response) => {\r\n            console.log(\"Response received:\", response);\r\n            resolve(response);\r\n          },\r\n          onFailure: (error) => {\r\n            console.error(\"Request failed:\", error);\r\n            reject(error);\r\n          },\r\n        });\r\n      });\r\n    };\r\n \r\n \r\n \r\n    // released childs but not present in CA Proposed Changes\r\n    let NotPropagableChilds = productChilds.filter((prodChild) => {\r\n      console.log(\"Processing prodChild:\", prodChild);\r\n      if (prodChild.state.toLowerCase() === \"released\") {\r\n        console.log(\"Released prodChild:\", prodChild);\r\n        const change = proposedChanges.find(\r\n          (change) =>\r\n            change.identifier === prodChild.id &&\r\n            change.action.toLowerCase() === \"modify\"\r\n        );\r\n        console.log(\"Matching change for prodChild:\", change);\r\n        return !change;\r\n      }\r\n      console.log(\"prodChild state is not 'released':\", prodChild.state);\r\n      return false;\r\n    });\r\n    console.log(\"NotPropagableChilds ARE :\", NotPropagableChilds);\r\n \r\n    let ErrorObj = [];\r\n    finalArray.forEach((classItem) => {\r\n      //if (classItem.Type === \"New\" || classItem.Type === \"Update\" ) {\r\n      if (classItem.MBOMValue) {\r\n        let prodchilds = [];\r\n        NotPropagableChilds.forEach((notPropagableChild) => {\r\n          if (!notPropagableChild.classes.includes(classItem.id)) {\r\n            prodchilds.push({\r\n              childId: notPropagableChild.id,\r\n              childName: notPropagableChild.name,\r\n            });\r\n          }\r\n        });\r\n        if (prodchilds.length > 0) {\r\n          ErrorObj.push({\r\n            id: classItem.id,\r\n            title: classItem.title,\r\n            childs: prodchilds,\r\n            type: classItem.Type,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    let Finalmessage = \"\";\r\n    console.log(\"ErrorObj IS\", ErrorObj);\r\n    ErrorObj.forEach((item) => {\r\n      let message = \"\";\r\n \r\n      // Check if item.childs is an array and contains valid objects with titles\r\n      if (\r\n        Array.isArray(item.childs) &&\r\n        item.childs.every((child) => child.childName)\r\n      ) {\r\n        const childTitles = item.childs\r\n          .map((child) => child.childName)\r\n          .join(\", \");\r\n        console.log(\"Chilld Titles are\", childTitles);\r\n        if (item.type.toLowerCase() !== \"new\") {\r\n          message = `${item.title} MBOM can't be Make due to unclassified child items: ${childTitles}`;\r\n        } else {\r\n          message = `Unable to classify product ${item.title} due to unclassified child items: ${childTitles}`;\r\n        }\r\n        console.log(\"Message is:\", message);\r\n      } else {\r\n        // Handle case where childs is invalid or missing titles\r\n        message = `Invalid child data for ${item.title}.`;\r\n      }\r\n \r\n      //  item.message = message;\r\n      Finalmessage += `${message}\\n`; // Using '\\n' to separate each message with a new line\r\n    });\r\n    console.log(ErrorObj);\r\n    console.log(\"Concatenated Messages:\\n\", Finalmessage);\r\n \r\n    let newClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.Type.toLowerCase() === \"new\" &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n    console.log(\"New Classes are:\", newClasses);\r\n    let updateBody = {};\r\n    finalArray.forEach((classItem) => {\r\n      const isIdNotInErrorObj = !ErrorObj.some(\r\n        (errorItem) => errorItem.id === classItem.id\r\n      );\r\n      if (\r\n        isIdNotInErrorObj &&\r\n        (classItem.Type.toLowerCase() === \"update\" ||\r\n          (classItem.Type.toLowerCase() === \"new\" && classItem.MBOMValue))\r\n      ) {\r\n        updateBody[classItem.MBOMName] = classItem.MBOMValue;\r\n      }\r\n    });\r\n    console.log(\"Update body is:\", updateBody);\r\n \r\n    let propagateClasses = finalArray\r\n      .filter(\r\n        (classItem) =>\r\n          classItem.MBOMValue &&\r\n          !ErrorObj.some((errorItem) => errorItem.id === classItem.id)\r\n      )\r\n      .map((classItem) => classItem.id);\r\n \r\n    console.log(\"Propogateable classes are\", propagateClasses);\r\n \r\n    if (newClasses.length > 0) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: newClasses,\r\n        mode: \"classifyParent\",\r\n      };\r\n      const classifyResponse = await fetchData(\r\n        \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"classifyResponse:\", JSON.stringify(classifyResponse));\r\n    }\r\n \r\n    if (Object.keys(updateBody).length > 0) {\r\n      const nextApiUrl = `${ENOVIA_BASE_URL}/resources/v1/modeler/dslib/dslib:ClassifiedItem/${productId}`;\r\n      const response = await fetchOOTBData(nextApiUrl, \"\", \"GET\");\r\n      console.log(\"CStamp Response:\", response);\r\n      let cestamp = response.member[0]?.cestamp || \"\";\r\n      updateBody[\"cestamp\"] = cestamp;\r\n \r\n      const patchUrl = `https://saasimplementationserverdev.azurewebsites.net/plantAssignment/updateClassificationAttribute?id=${productId}`;\r\n      await fetchData(\"PATCH\",patchUrl, updateBody, );\r\n      console.log(\"Updated database successfully.\");\r\n    }\r\n \r\n    if (\r\n      propagateClasses.length > 0 &&\r\n      productChilds.length > 0 &&\r\n      type === \"VPMReference\"\r\n    ) {\r\n      let classifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/classifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: propagateClasses,\r\n        childs: productChilds,\r\n        mode: \"classifychilds\",\r\n      };\r\n      const childclassifyResponse = await fetchData(\r\n         \"POST\",\r\n        classifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\r\n        \"child classifyResponse:\",\r\n        JSON.stringify(childclassifyResponse)\r\n      );\r\n    }\r\n    if (rowstoDelete.length > 0) {\r\n      let declassifyUrl =\r\n        \"https://saasimplementationserverdev.azurewebsites.net/plantAssignment/declassifyProductToClass\";\r\n \r\n      let classifybody = {\r\n        id: productId,\r\n        type: type,\r\n        classes: rowstoDelete,\r\n      };\r\n      const declassifyResponse = await fetchData(\r\n        \"POST\",\r\n        declassifyUrl,\r\n        classifybody,\r\n       \r\n      );\r\n      console.log(\"declassifyResponse:\", JSON.stringify(declassifyResponse));\r\n    }\r\n \r\n    console.log(\"All classification API calls completed successfully.\");\r\n \r\n    return {\r\n      success: true,\r\n      message: \"Data saved successfully\",\r\n      ErrorObj: ErrorObj,\r\n      Finalmessage: Finalmessage,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error occurred:\", error);\r\n    return { success: false, message: \"Failed to save data\", error };\r\n  }\r\n};"],"names":["_ref","show","onHide","title","children","footerButtons","_jsxs","Modal","size","centered","_jsx","Header","closeButton","Title","Body","Footer","map","btn","index","Button","variant","onClick","label","forwardRef","ref","data","columns","addedItem","CAName","state","showWarningToast","useToast","rowSelection","setRowSelection","useState","useEffect","addPlant","selectedItems","table","getSelectedRowModel","rows","item","original","length","MSG_EMPTYADD_ERROR","useImperativeHandle","enhancedColumns","useMemo","id","cell","_ref2","row","type","className","checked","getIsSelected","onChange","getToggleSelectedHandler","useReactTable","enableRowSelection","onRowSelectionChange","getCoreRowModel","_Fragment","getRowModel","forEach","toggleSelected","style","maxHeight","backgroundColor","flexRender","getVisibleCells","column","columnDef","getContext","accessorKey","useDocumentCreationWidget","showErrorToast","dispatch","useDispatch","ENOVIA_BASE_URL","process","email","window","widget","getValue","console","log","handleDocumentCreationWidget","async","collabSpace","objectId","parentName","parentRevision","setParentDetailsLoading","headers","fetchCsrfToken","MSG_FETCH_CSRF_HEADERS_FAILED","baseURL","concat","parentDirection","urlObjWAF","ChildObject","callEnoviaWebService","status","output","_response$data","_response$data$data","_response$data2","_response$data2$data","requestBody","getUrl","ChildObjectDocument","sSpec","dataelements","trim","secondaryTitle","revision","stateNLS","name","revisionBody","child","body","identifier","source","relativePath","push","RevisionUrl","response","convertRevisionToNumber","rev","test","parseInt","number","i","charCodeAt","results","latestVersion","versions","reduce","latest","current","doc","some","version","_objectSpread","isLatestRevision","SpecName","SpecRevision","Items","obj","ItemName","ItemRevision","Specifications","fetchData","mergedData","spec","matchingDoc","find","childState","childTitle","childLatest","childName","childRevision","PrintOnPurchaseOrderRequired","PrintOnWorkOrderRequired","WorkOrderDocumentRequired","PrintOnReportOrderRequired","warn","setDocumentCreationData","setSpecDocument","error","useDocumentCreationDropableArea","loading","setLoading","fetchObjectDetails","useCallback","objectDetailsResult","getDroppedObjectDetails","dataItems","success","setDroppedObjectData","cardData","draggedObjectData","_dataItems$","_dataItems$2","setIsDroppedAction","setDragObjectDetailsDocumentCreation","objectType","Name","MSG_FETCH_OBJECT_DETAILS_FAILED","handleDrop","_dataItems$3","includes","MSG_INVALID_OBJECT_TYPE","MSG_UNEXPECTED_ERROR","initializeDroppableArea","interval","setInterval","droppableContainer","document","querySelector","clearInterval","initDroppable","performSearch","useInterComSearch","Image","width","height","src","alt","SearchInput","onSearch","searchText","role","mode","default_with_precond","precond","show_precond","multiSel","idcard_activated","select_result_max_idcard","itemViewClickHandler","search_delegation","selectedObjects","formatDateToCustom","input","date","Date","localDate","toLocaleString","timeZone","pad","n","toString","padStart","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","getTableData","tableData","_data$dataelements","_data$dataelements2","_data$dataelements3","_data$dataelements4","_data$dataelements5","_data$dataelements6","_data$dataelements7","_data$dataelements8","_data$dataelements9","_data$dataelements10","Revision","State","TypeNLS","typeNLS","Originated","originated","Modified","modified","IsLatestRevision","onSave","setType","typeDropDownData","setTypeDropDownData","val","CustomModal","e","target","value","class","selectedRows","latestRevision","droppedRevision","documentCreationData","showDropdown","setShowDropdown","isShowPopup","setIsShowPopup","disabled","DocumentCreationModal","handleClosePopup","DocumentCreationWidget","tableKey","setTableKey","setTableData","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","specData","setSpecData","selectableRows","setSelectableRows","showSuccessToast","selectedTableRows","useSelector","droppedObject","droppedObjectData","loadingParentDetails","proposedChanges","plantObjectData","isDropped","bosData","BOSObjectData","bosSpecDocument","specDocument","_state$droppedObject$","dropObjectDetailsData","_state$droppedObject$2","dropObjectDetails","showDetailPageDocumentCreation","_state$droppedObject$3","showDetailPage","prevKey","initialDraggedData","_droppedObjectData$in","_droppedObjectData$in2","items","newTableData","Type","owner","Owner","Description","imageURL","EIN","getCardData","columnKey","header","store","setDocumentCreationShowDetailPage","optimizedTableData","filteredData","filter","_item$dataelements","_item$dataelements$ti","_dropObjectDetailsDat","_dropObjectDetailsDat2","itemTitle","objEIN","objTitle","Loader","DragAndDropComponent","handleHomeClick","setIsDropped","parentDetails","setPlantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CardWithDragAndDrop","widgetType","DocumentCreationToolbarCta","formattedData","undefined","_response","then","res","catch","statusCode","MSG_SAVE_SUCCESS","errorMessage","ReusableTable","showActionButtons","onSelectableRowsChange","setDocumentCreationHideDetailPage","root","hasOnLoadRun","addEvent","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","render","Provider","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener","extractIdsFromTitles","newClasses","replace","matchedPlant","plant","toLowerCase","handleRemoveData","removedTitles","productId","rowstoDelete","declassifyUrl","classifybody","classes","declassifyResponse","JSON","stringify","handleAddData","productChilds","hasMBOM","NotPropagableChilds","prodChild","change","action","ErrorObject","classId","missingIn","join","ClassID","Childs","Finalmessage","_allPlants$find","classTitle","message","filteredNewClasses","classifyUrl","classifyResponse","childs","childclassifyResponse","saveData","updatedItems","classesToBeClassified","initialAssignedClasses","AllClasses","finalArray","WAFData","loadWAFData","fetchOOTBData","url","method","Promise","resolve","reject","authenticatedRequest","onComplete","onFailure","ErrorObj","classItem","MBOMValue","prodchilds","notPropagableChild","childId","Array","isArray","every","childTitles","errorItem","updateBody","MBOMName","propagateClasses","Object","keys","_response$member$","nextApiUrl","cestamp","member","patchUrl"],"sourceRoot":""}